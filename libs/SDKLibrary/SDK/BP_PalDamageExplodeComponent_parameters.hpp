#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PalDamageExplodeComponent

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_PalDamageExplodeComponent.BP_PalDamageExplodeComponent_C.ExecuteUbergraph_BP_PalDamageExplodeComponent
// 0x01B0 (0x01B0 - 0x0000)
struct BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15EA[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Attacker_1;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Attacker;                       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_2;                   // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15EB[0xF];                                     // 0x0111(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0120(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalStatusComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x0188(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_ExplosionAttackBase_C*              CallFunc_FinishSpawningActor_ReturnValue;          // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Attacker;                             // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DelayTime;                            // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent) == 0x000010, "Wrong alignment on BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent");
static_assert(sizeof(BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent) == 0x0001B0, "Wrong size on BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent");
static_assert(offsetof(BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent, EntryPoint) == 0x000000, "Member 'BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent, K2Node_Event_Attacker_1) == 0x000008, "Member 'BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent::K2Node_Event_Attacker_1' has a wrong offset!");
static_assert(offsetof(BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent, K2Node_CustomEvent_Attacker) == 0x000018, "Member 'BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent::K2Node_CustomEvent_Attacker' has a wrong offset!");
static_assert(offsetof(BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent, CallFunc_BreakTransform_Location) == 0x000080, "Member 'BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent, CallFunc_BreakTransform_Rotation) == 0x000098, "Member 'BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent, CallFunc_BreakTransform_Scale) == 0x0000B0, "Member 'BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent, CallFunc_BreakVector_X) == 0x0000C8, "Member 'BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent, CallFunc_BreakVector_Y) == 0x0000D0, "Member 'BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent, CallFunc_BreakVector_Z) == 0x0000D8, "Member 'BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent, CallFunc_GetOwner_ReturnValue_1) == 0x0000E0, "Member 'BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000E8, "Member 'BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent, CallFunc_GetOwner_ReturnValue_2) == 0x0000F0, "Member 'BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent::CallFunc_GetOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent, CallFunc_MakeVector_ReturnValue) == 0x0000F8, "Member 'BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent, CallFunc_IsValid_ReturnValue) == 0x000110, "Member 'BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent, CallFunc_MakeTransform_ReturnValue) == 0x000120, "Member 'BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000180, "Member 'BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x000188, "Member 'BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent, CallFunc_FinishSpawningActor_ReturnValue) == 0x000190, "Member 'BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent, K2Node_Event_Attacker) == 0x000198, "Member 'BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent::K2Node_Event_Attacker' has a wrong offset!");
static_assert(offsetof(BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent, K2Node_Event_DelayTime) == 0x0001A0, "Member 'BP_PalDamageExplodeComponent_C_ExecuteUbergraph_BP_PalDamageExplodeComponent::K2Node_Event_DelayTime' has a wrong offset!");

// Function BP_PalDamageExplodeComponent.BP_PalDamageExplodeComponent_C.SpawnEx_ToAll
// 0x0008 (0x0008 - 0x0000)
struct BP_PalDamageExplodeComponent_C_SpawnEx_ToAll final
{
public:
	class AActor*                                 Attacker;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalDamageExplodeComponent_C_SpawnEx_ToAll) == 0x000008, "Wrong alignment on BP_PalDamageExplodeComponent_C_SpawnEx_ToAll");
static_assert(sizeof(BP_PalDamageExplodeComponent_C_SpawnEx_ToAll) == 0x000008, "Wrong size on BP_PalDamageExplodeComponent_C_SpawnEx_ToAll");
static_assert(offsetof(BP_PalDamageExplodeComponent_C_SpawnEx_ToAll, Attacker) == 0x000000, "Member 'BP_PalDamageExplodeComponent_C_SpawnEx_ToAll::Attacker' has a wrong offset!");

// Function BP_PalDamageExplodeComponent.BP_PalDamageExplodeComponent_C.SpawnExplosionActor
// 0x0008 (0x0008 - 0x0000)
struct BP_PalDamageExplodeComponent_C_SpawnExplosionActor final
{
public:
	class AActor*                                 Attacker;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalDamageExplodeComponent_C_SpawnExplosionActor) == 0x000008, "Wrong alignment on BP_PalDamageExplodeComponent_C_SpawnExplosionActor");
static_assert(sizeof(BP_PalDamageExplodeComponent_C_SpawnExplosionActor) == 0x000008, "Wrong size on BP_PalDamageExplodeComponent_C_SpawnExplosionActor");
static_assert(offsetof(BP_PalDamageExplodeComponent_C_SpawnExplosionActor, Attacker) == 0x000000, "Member 'BP_PalDamageExplodeComponent_C_SpawnExplosionActor::Attacker' has a wrong offset!");

// Function BP_PalDamageExplodeComponent.BP_PalDamageExplodeComponent_C.SpawnExplosionActor_Delay
// 0x0010 (0x0010 - 0x0000)
struct BP_PalDamageExplodeComponent_C_SpawnExplosionActor_Delay final
{
public:
	class AActor*                                 Attacker;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         DelayTime;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PalDamageExplodeComponent_C_SpawnExplosionActor_Delay) == 0x000008, "Wrong alignment on BP_PalDamageExplodeComponent_C_SpawnExplosionActor_Delay");
static_assert(sizeof(BP_PalDamageExplodeComponent_C_SpawnExplosionActor_Delay) == 0x000010, "Wrong size on BP_PalDamageExplodeComponent_C_SpawnExplosionActor_Delay");
static_assert(offsetof(BP_PalDamageExplodeComponent_C_SpawnExplosionActor_Delay, Attacker) == 0x000000, "Member 'BP_PalDamageExplodeComponent_C_SpawnExplosionActor_Delay::Attacker' has a wrong offset!");
static_assert(offsetof(BP_PalDamageExplodeComponent_C_SpawnExplosionActor_Delay, DelayTime) == 0x000008, "Member 'BP_PalDamageExplodeComponent_C_SpawnExplosionActor_Delay::DelayTime' has a wrong offset!");

}

