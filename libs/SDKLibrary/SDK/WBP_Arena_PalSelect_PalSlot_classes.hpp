#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Arena_PalSelect_PalSlot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Arena_PalSelect_PalSlot.WBP_Arena_PalSelect_PalSlot_C
// 0x0028 (0x02A0 - 0x0278)
class UWBP_Arena_PalSelect_PalSlot_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anm_Select;                                        // 0x0280(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anm_Default;                                       // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWBP_PalCommonCharacterIcon_C*          WBP_PalCommonCharacterIcon;                        // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FName                                   Character_Id;                                      // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot(int32 EntryPoint);
	void SetNowSetting(bool IsSetting);
	void SetPalIcon(class UPalIndividualCharacterParameter* CharacterParameter);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Arena_PalSelect_PalSlot_C">();
	}
	static class UWBP_Arena_PalSelect_PalSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Arena_PalSelect_PalSlot_C>();
	}
};
static_assert(alignof(UWBP_Arena_PalSelect_PalSlot_C) == 0x000008, "Wrong alignment on UWBP_Arena_PalSelect_PalSlot_C");
static_assert(sizeof(UWBP_Arena_PalSelect_PalSlot_C) == 0x0002A0, "Wrong size on UWBP_Arena_PalSelect_PalSlot_C");
static_assert(offsetof(UWBP_Arena_PalSelect_PalSlot_C, UberGraphFrame) == 0x000278, "Member 'UWBP_Arena_PalSelect_PalSlot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Arena_PalSelect_PalSlot_C, Anm_Select) == 0x000280, "Member 'UWBP_Arena_PalSelect_PalSlot_C::Anm_Select' has a wrong offset!");
static_assert(offsetof(UWBP_Arena_PalSelect_PalSlot_C, Anm_Default) == 0x000288, "Member 'UWBP_Arena_PalSelect_PalSlot_C::Anm_Default' has a wrong offset!");
static_assert(offsetof(UWBP_Arena_PalSelect_PalSlot_C, WBP_PalCommonCharacterIcon) == 0x000290, "Member 'UWBP_Arena_PalSelect_PalSlot_C::WBP_PalCommonCharacterIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Arena_PalSelect_PalSlot_C, Character_Id) == 0x000298, "Member 'UWBP_Arena_PalSelect_PalSlot_C::Character_Id' has a wrong offset!");

}

