#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Electric_Pole_3_light

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Electric_Pole_3_light.BP_Electric_Pole_3_light_C
// 0x0028 (0x02B8 - 0x0290)
class ABP_Electric_Pole_3_light_C final : public AActor
{
public:
	class UBP_PalOilrigLightComponent_C*          BP_PalOilrigLightComponent;                        // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class URectLightComponent*                    RectLight;                                         // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight;                                        // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Electric_Pole_3;                                // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Electric_Pole_3_light_C">();
	}
	static class ABP_Electric_Pole_3_light_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Electric_Pole_3_light_C>();
	}
};
static_assert(alignof(ABP_Electric_Pole_3_light_C) == 0x000008, "Wrong alignment on ABP_Electric_Pole_3_light_C");
static_assert(sizeof(ABP_Electric_Pole_3_light_C) == 0x0002B8, "Wrong size on ABP_Electric_Pole_3_light_C");
static_assert(offsetof(ABP_Electric_Pole_3_light_C, BP_PalOilrigLightComponent) == 0x000290, "Member 'ABP_Electric_Pole_3_light_C::BP_PalOilrigLightComponent' has a wrong offset!");
static_assert(offsetof(ABP_Electric_Pole_3_light_C, RectLight) == 0x000298, "Member 'ABP_Electric_Pole_3_light_C::RectLight' has a wrong offset!");
static_assert(offsetof(ABP_Electric_Pole_3_light_C, PointLight) == 0x0002A0, "Member 'ABP_Electric_Pole_3_light_C::PointLight' has a wrong offset!");
static_assert(offsetof(ABP_Electric_Pole_3_light_C, SM_Electric_Pole_3) == 0x0002A8, "Member 'ABP_Electric_Pole_3_light_C::SM_Electric_Pole_3' has a wrong offset!");
static_assert(offsetof(ABP_Electric_Pole_3_light_C, DefaultSceneRoot) == 0x0002B0, "Member 'ABP_Electric_Pole_3_light_C::DefaultSceneRoot' has a wrong offset!");

}

