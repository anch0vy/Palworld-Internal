#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GatlingGun

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Pal_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_GatlingGun.BP_GatlingGun_C.StopFireLoopSound
// 0x0018 (0x0018 - 0x0000)
struct BP_GatlingGun_C_StopFireLoopSound final
{
public:
	TDelegate<void(bool IsPlaying)>               K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalDataTableRowName_SoundID           K2Node_MakeStruct_PalDataTableRowName_SoundID;     // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GatlingGun_C_StopFireLoopSound) == 0x000004, "Wrong alignment on BP_GatlingGun_C_StopFireLoopSound");
static_assert(sizeof(BP_GatlingGun_C_StopFireLoopSound) == 0x000018, "Wrong size on BP_GatlingGun_C_StopFireLoopSound");
static_assert(offsetof(BP_GatlingGun_C_StopFireLoopSound, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_GatlingGun_C_StopFireLoopSound::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_StopFireLoopSound, K2Node_MakeStruct_PalDataTableRowName_SoundID) == 0x000010, "Member 'BP_GatlingGun_C_StopFireLoopSound::K2Node_MakeStruct_PalDataTableRowName_SoundID' has a wrong offset!");

// Function BP_GatlingGun.BP_GatlingGun_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_GatlingGun_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GatlingGun_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_GatlingGun_C_ReceiveEndPlay");
static_assert(sizeof(BP_GatlingGun_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_GatlingGun_C_ReceiveEndPlay");
static_assert(offsetof(BP_GatlingGun_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_GatlingGun_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_GatlingGun.BP_GatlingGun_C.PlayFireLoopSound
// 0x0008 (0x0008 - 0x0000)
struct BP_GatlingGun_C_PlayFireLoopSound final
{
public:
	struct FPalDataTableRowName_SoundID           K2Node_MakeStruct_PalDataTableRowName_SoundID;     // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GatlingGun_C_PlayFireLoopSound) == 0x000004, "Wrong alignment on BP_GatlingGun_C_PlayFireLoopSound");
static_assert(sizeof(BP_GatlingGun_C_PlayFireLoopSound) == 0x000008, "Wrong size on BP_GatlingGun_C_PlayFireLoopSound");
static_assert(offsetof(BP_GatlingGun_C_PlayFireLoopSound, K2Node_MakeStruct_PalDataTableRowName_SoundID) == 0x000000, "Member 'BP_GatlingGun_C_PlayFireLoopSound::K2Node_MakeStruct_PalDataTableRowName_SoundID' has a wrong offset!");

// Function BP_GatlingGun.BP_GatlingGun_C.Is UseEjectionPort
// 0x0001 (0x0001 - 0x0000)
struct BP_GatlingGun_C_Is_UseEjectionPort final
{
public:
	bool                                          IsUse;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GatlingGun_C_Is_UseEjectionPort) == 0x000001, "Wrong alignment on BP_GatlingGun_C_Is_UseEjectionPort");
static_assert(sizeof(BP_GatlingGun_C_Is_UseEjectionPort) == 0x000001, "Wrong size on BP_GatlingGun_C_Is_UseEjectionPort");
static_assert(offsetof(BP_GatlingGun_C_Is_UseEjectionPort, IsUse) == 0x000000, "Member 'BP_GatlingGun_C_Is_UseEjectionPort::IsUse' has a wrong offset!");

// Function BP_GatlingGun.BP_GatlingGun_C.GeyEjectionPortTransform
// 0x00C0 (0x00C0 - 0x0000)
struct BP_GatlingGun_C_GeyEjectionPortTransform final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GatlingGun_C_GeyEjectionPortTransform) == 0x000010, "Wrong alignment on BP_GatlingGun_C_GeyEjectionPortTransform");
static_assert(sizeof(BP_GatlingGun_C_GeyEjectionPortTransform) == 0x0000C0, "Wrong size on BP_GatlingGun_C_GeyEjectionPortTransform");
static_assert(offsetof(BP_GatlingGun_C_GeyEjectionPortTransform, Transform) == 0x000000, "Member 'BP_GatlingGun_C_GeyEjectionPortTransform::Transform' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GeyEjectionPortTransform, CallFunc_GetSocketTransform_ReturnValue) == 0x000060, "Member 'BP_GatlingGun_C_GeyEjectionPortTransform::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");

// Function BP_GatlingGun.BP_GatlingGun_C.GetTargetPosition
// 0x0218 (0x0218 - 0x0000)
struct BP_GatlingGun_C_GetTargetPosition final
{
public:
	struct FVector                                Param_TargetPosition;                              // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WeaponPos;                                         // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ShooterToTargetDistanceZ0;                         // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ShooterToMuzzleDistanceZ0;                         // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WeaponForward;                                     // 0x0040(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MuzzlePos;                                         // 0x0058(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ShooterPos;                                        // 0x0070(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CPCTargetPos;                                      // 0x0088(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RasultTargetPos;                                   // 0x00A0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InFanShap_TargetLocation_ReturnValue;     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CE9[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APalPlayerCharacter*                    K2Node_DynamicCast_AsPal_Player_Character;         // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CEA[0x7];                                     // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue_1;         // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CEB[0x7];                                     // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance2D_ReturnValue;            // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance2D_ReturnValue_1;          // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetMuzzleLocation_MuzzleLocation;         // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetPosition_TargetPosition;         // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTargetPosition_TargetPosition_1;       // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GatlingGun_C_GetTargetPosition) == 0x000008, "Wrong alignment on BP_GatlingGun_C_GetTargetPosition");
static_assert(sizeof(BP_GatlingGun_C_GetTargetPosition) == 0x000218, "Wrong size on BP_GatlingGun_C_GetTargetPosition");
static_assert(offsetof(BP_GatlingGun_C_GetTargetPosition, Param_TargetPosition) == 0x000000, "Member 'BP_GatlingGun_C_GetTargetPosition::Param_TargetPosition' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetTargetPosition, WeaponPos) == 0x000018, "Member 'BP_GatlingGun_C_GetTargetPosition::WeaponPos' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetTargetPosition, ShooterToTargetDistanceZ0) == 0x000030, "Member 'BP_GatlingGun_C_GetTargetPosition::ShooterToTargetDistanceZ0' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetTargetPosition, ShooterToMuzzleDistanceZ0) == 0x000038, "Member 'BP_GatlingGun_C_GetTargetPosition::ShooterToMuzzleDistanceZ0' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetTargetPosition, WeaponForward) == 0x000040, "Member 'BP_GatlingGun_C_GetTargetPosition::WeaponForward' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetTargetPosition, MuzzlePos) == 0x000058, "Member 'BP_GatlingGun_C_GetTargetPosition::MuzzlePos' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetTargetPosition, ShooterPos) == 0x000070, "Member 'BP_GatlingGun_C_GetTargetPosition::ShooterPos' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetTargetPosition, CPCTargetPos) == 0x000088, "Member 'BP_GatlingGun_C_GetTargetPosition::CPCTargetPos' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetTargetPosition, RasultTargetPos) == 0x0000A0, "Member 'BP_GatlingGun_C_GetTargetPosition::RasultTargetPos' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetTargetPosition, CallFunc_Conv_FloatToVector_ReturnValue) == 0x0000B8, "Member 'BP_GatlingGun_C_GetTargetPosition::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetTargetPosition, CallFunc_InFanShap_TargetLocation_ReturnValue) == 0x0000D0, "Member 'BP_GatlingGun_C_GetTargetPosition::CallFunc_InFanShap_TargetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetTargetPosition, CallFunc_GetOwner_ReturnValue) == 0x0000D8, "Member 'BP_GatlingGun_C_GetTargetPosition::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetTargetPosition, K2Node_DynamicCast_AsPal_Player_Character) == 0x0000E0, "Member 'BP_GatlingGun_C_GetTargetPosition::K2Node_DynamicCast_AsPal_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetTargetPosition, K2Node_DynamicCast_bSuccess) == 0x0000E8, "Member 'BP_GatlingGun_C_GetTargetPosition::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetTargetPosition, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000F0, "Member 'BP_GatlingGun_C_GetTargetPosition::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetTargetPosition, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000108, "Member 'BP_GatlingGun_C_GetTargetPosition::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetTargetPosition, CallFunc_Conv_FloatToVector_ReturnValue_1) == 0x000120, "Member 'BP_GatlingGun_C_GetTargetPosition::CallFunc_Conv_FloatToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetTargetPosition, CallFunc_Add_VectorVector_ReturnValue) == 0x000138, "Member 'BP_GatlingGun_C_GetTargetPosition::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetTargetPosition, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000150, "Member 'BP_GatlingGun_C_GetTargetPosition::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetTargetPosition, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000168, "Member 'BP_GatlingGun_C_GetTargetPosition::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetTargetPosition, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000180, "Member 'BP_GatlingGun_C_GetTargetPosition::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetTargetPosition, CallFunc_Vector_Distance2D_ReturnValue) == 0x000188, "Member 'BP_GatlingGun_C_GetTargetPosition::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetTargetPosition, CallFunc_Vector_Distance2D_ReturnValue_1) == 0x000190, "Member 'BP_GatlingGun_C_GetTargetPosition::CallFunc_Vector_Distance2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetTargetPosition, CallFunc_GetActorForwardVector_ReturnValue) == 0x000198, "Member 'BP_GatlingGun_C_GetTargetPosition::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetTargetPosition, CallFunc_GetOwner_ReturnValue_1) == 0x0001B0, "Member 'BP_GatlingGun_C_GetTargetPosition::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetTargetPosition, CallFunc_GetMuzzleLocation_MuzzleLocation) == 0x0001B8, "Member 'BP_GatlingGun_C_GetTargetPosition::CallFunc_GetMuzzleLocation_MuzzleLocation' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetTargetPosition, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0001D0, "Member 'BP_GatlingGun_C_GetTargetPosition::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetTargetPosition, CallFunc_GetTargetPosition_TargetPosition) == 0x0001E8, "Member 'BP_GatlingGun_C_GetTargetPosition::CallFunc_GetTargetPosition_TargetPosition' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetTargetPosition, CallFunc_GetTargetPosition_TargetPosition_1) == 0x000200, "Member 'BP_GatlingGun_C_GetTargetPosition::CallFunc_GetTargetPosition_TargetPosition_1' has a wrong offset!");

// Function BP_GatlingGun.BP_GatlingGun_C.GetShootInterval
// 0x0008 (0x0008 - 0x0000)
struct BP_GatlingGun_C_GetShootInterval final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GatlingGun_C_GetShootInterval) == 0x000008, "Wrong alignment on BP_GatlingGun_C_GetShootInterval");
static_assert(sizeof(BP_GatlingGun_C_GetShootInterval) == 0x000008, "Wrong size on BP_GatlingGun_C_GetShootInterval");
static_assert(offsetof(BP_GatlingGun_C_GetShootInterval, Time) == 0x000000, "Member 'BP_GatlingGun_C_GetShootInterval::Time' has a wrong offset!");

// Function BP_GatlingGun.BP_GatlingGun_C.GetMuzzleRotator
// 0x0030 (0x0030 - 0x0000)
struct BP_GatlingGun_C_GetMuzzleRotator final
{
public:
	struct FRotator                               Rotator;                                           // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GatlingGun_C_GetMuzzleRotator) == 0x000008, "Wrong alignment on BP_GatlingGun_C_GetMuzzleRotator");
static_assert(sizeof(BP_GatlingGun_C_GetMuzzleRotator) == 0x000030, "Wrong size on BP_GatlingGun_C_GetMuzzleRotator");
static_assert(offsetof(BP_GatlingGun_C_GetMuzzleRotator, Rotator) == 0x000000, "Member 'BP_GatlingGun_C_GetMuzzleRotator::Rotator' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetMuzzleRotator, CallFunc_GetSocketRotation_ReturnValue) == 0x000018, "Member 'BP_GatlingGun_C_GetMuzzleRotator::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");

// Function BP_GatlingGun.BP_GatlingGun_C.GetMuzzleLocation
// 0x0030 (0x0030 - 0x0000)
struct BP_GatlingGun_C_GetMuzzleLocation final
{
public:
	struct FVector                                MuzzleLocation;                                    // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GatlingGun_C_GetMuzzleLocation) == 0x000008, "Wrong alignment on BP_GatlingGun_C_GetMuzzleLocation");
static_assert(sizeof(BP_GatlingGun_C_GetMuzzleLocation) == 0x000030, "Wrong size on BP_GatlingGun_C_GetMuzzleLocation");
static_assert(offsetof(BP_GatlingGun_C_GetMuzzleLocation, MuzzleLocation) == 0x000000, "Member 'BP_GatlingGun_C_GetMuzzleLocation::MuzzleLocation' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetMuzzleLocation, CallFunc_GetSocketLocation_ReturnValue) == 0x000018, "Member 'BP_GatlingGun_C_GetMuzzleLocation::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");

// Function BP_GatlingGun.BP_GatlingGun_C.GetMuzzleEffect
// 0x0008 (0x0008 - 0x0000)
struct BP_GatlingGun_C_GetMuzzleEffect final
{
public:
	class UNiagaraSystem*                         NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GatlingGun_C_GetMuzzleEffect) == 0x000008, "Wrong alignment on BP_GatlingGun_C_GetMuzzleEffect");
static_assert(sizeof(BP_GatlingGun_C_GetMuzzleEffect) == 0x000008, "Wrong size on BP_GatlingGun_C_GetMuzzleEffect");
static_assert(offsetof(BP_GatlingGun_C_GetMuzzleEffect, NewParam) == 0x000000, "Member 'BP_GatlingGun_C_GetMuzzleEffect::NewParam' has a wrong offset!");

// Function BP_GatlingGun.BP_GatlingGun_C.GetBulletClass
// 0x0008 (0x0008 - 0x0000)
struct BP_GatlingGun_C_GetBulletClass final
{
public:
	class UClass*                                 NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GatlingGun_C_GetBulletClass) == 0x000008, "Wrong alignment on BP_GatlingGun_C_GetBulletClass");
static_assert(sizeof(BP_GatlingGun_C_GetBulletClass) == 0x000008, "Wrong size on BP_GatlingGun_C_GetBulletClass");
static_assert(offsetof(BP_GatlingGun_C_GetBulletClass, NewParam) == 0x000000, "Member 'BP_GatlingGun_C_GetBulletClass::NewParam' has a wrong offset!");

// Function BP_GatlingGun.BP_GatlingGun_C.GetAmmoClass
// 0x0008 (0x0008 - 0x0000)
struct BP_GatlingGun_C_GetAmmoClass final
{
public:
	class UClass*                                 AmmoClass;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GatlingGun_C_GetAmmoClass) == 0x000008, "Wrong alignment on BP_GatlingGun_C_GetAmmoClass");
static_assert(sizeof(BP_GatlingGun_C_GetAmmoClass) == 0x000008, "Wrong size on BP_GatlingGun_C_GetAmmoClass");
static_assert(offsetof(BP_GatlingGun_C_GetAmmoClass, AmmoClass) == 0x000000, "Member 'BP_GatlingGun_C_GetAmmoClass::AmmoClass' has a wrong offset!");

// Function BP_GatlingGun.BP_GatlingGun_C.ExecuteUbergraph_BP_GatlingGun
// 0x0008 (0x0008 - 0x0000)
struct BP_GatlingGun_C_ExecuteUbergraph_BP_GatlingGun final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GatlingGun_C_ExecuteUbergraph_BP_GatlingGun) == 0x000004, "Wrong alignment on BP_GatlingGun_C_ExecuteUbergraph_BP_GatlingGun");
static_assert(sizeof(BP_GatlingGun_C_ExecuteUbergraph_BP_GatlingGun) == 0x000008, "Wrong size on BP_GatlingGun_C_ExecuteUbergraph_BP_GatlingGun");
static_assert(offsetof(BP_GatlingGun_C_ExecuteUbergraph_BP_GatlingGun, EntryPoint) == 0x000000, "Member 'BP_GatlingGun_C_ExecuteUbergraph_BP_GatlingGun::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_ExecuteUbergraph_BP_GatlingGun, K2Node_Event_EndPlayReason) == 0x000004, "Member 'BP_GatlingGun_C_ExecuteUbergraph_BP_GatlingGun::K2Node_Event_EndPlayReason' has a wrong offset!");

// Function BP_GatlingGun.BP_GatlingGun_C.BP_GatlingGun_AutoGenFunc
// 0x000C (0x000C - 0x0000)
struct BP_GatlingGun_C_BP_GatlingGun_AutoGenFunc final
{
public:
	bool                                          IsPlaying;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CEC[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalDataTableRowName_SoundID           K2Node_MakeStruct_PalDataTableRowName_SoundID;     // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GatlingGun_C_BP_GatlingGun_AutoGenFunc) == 0x000004, "Wrong alignment on BP_GatlingGun_C_BP_GatlingGun_AutoGenFunc");
static_assert(sizeof(BP_GatlingGun_C_BP_GatlingGun_AutoGenFunc) == 0x00000C, "Wrong size on BP_GatlingGun_C_BP_GatlingGun_AutoGenFunc");
static_assert(offsetof(BP_GatlingGun_C_BP_GatlingGun_AutoGenFunc, IsPlaying) == 0x000000, "Member 'BP_GatlingGun_C_BP_GatlingGun_AutoGenFunc::IsPlaying' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_BP_GatlingGun_AutoGenFunc, K2Node_MakeStruct_PalDataTableRowName_SoundID) == 0x000004, "Member 'BP_GatlingGun_C_BP_GatlingGun_AutoGenFunc::K2Node_MakeStruct_PalDataTableRowName_SoundID' has a wrong offset!");

// Function BP_GatlingGun.BP_GatlingGun_C.IsUseLeftHandAttach
// 0x0001 (0x0001 - 0x0000)
struct BP_GatlingGun_C_IsUseLeftHandAttach final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GatlingGun_C_IsUseLeftHandAttach) == 0x000001, "Wrong alignment on BP_GatlingGun_C_IsUseLeftHandAttach");
static_assert(sizeof(BP_GatlingGun_C_IsUseLeftHandAttach) == 0x000001, "Wrong size on BP_GatlingGun_C_IsUseLeftHandAttach");
static_assert(offsetof(BP_GatlingGun_C_IsUseLeftHandAttach, ReturnValue) == 0x000000, "Member 'BP_GatlingGun_C_IsUseLeftHandAttach::ReturnValue' has a wrong offset!");

// Function BP_GatlingGun.BP_GatlingGun_C.GetLeftHandTransform
// 0x00C0 (0x00C0 - 0x0000)
struct BP_GatlingGun_C_GetLeftHandTransform final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GatlingGun_C_GetLeftHandTransform) == 0x000010, "Wrong alignment on BP_GatlingGun_C_GetLeftHandTransform");
static_assert(sizeof(BP_GatlingGun_C_GetLeftHandTransform) == 0x0000C0, "Wrong size on BP_GatlingGun_C_GetLeftHandTransform");
static_assert(offsetof(BP_GatlingGun_C_GetLeftHandTransform, ReturnValue) == 0x000000, "Member 'BP_GatlingGun_C_GetLeftHandTransform::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GatlingGun_C_GetLeftHandTransform, CallFunc_GetSocketTransform_ReturnValue) == 0x000060, "Member 'BP_GatlingGun_C_GetLeftHandTransform::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");

// Function BP_GatlingGun.BP_GatlingGun_C.GetDefaultBlurAngle
// 0x0004 (0x0004 - 0x0000)
struct BP_GatlingGun_C_GetDefaultBlurAngle final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GatlingGun_C_GetDefaultBlurAngle) == 0x000004, "Wrong alignment on BP_GatlingGun_C_GetDefaultBlurAngle");
static_assert(sizeof(BP_GatlingGun_C_GetDefaultBlurAngle) == 0x000004, "Wrong size on BP_GatlingGun_C_GetDefaultBlurAngle");
static_assert(offsetof(BP_GatlingGun_C_GetDefaultBlurAngle, ReturnValue) == 0x000000, "Member 'BP_GatlingGun_C_GetDefaultBlurAngle::ReturnValue' has a wrong offset!");

}

