#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Bp_Radar_1

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Bp_Radar_1.Bp_Radar_1_C
// 0x0030 (0x02C0 - 0x0290)
class ABp_Radar_1_C final : public AActor
{
public:
	class UStaticMeshComponent*                   StaticMesh4;                                       // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh3;                                       // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh2;                                       // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh1;                                       // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Bp_Radar_1_C">();
	}
	static class ABp_Radar_1_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABp_Radar_1_C>();
	}
};
static_assert(alignof(ABp_Radar_1_C) == 0x000008, "Wrong alignment on ABp_Radar_1_C");
static_assert(sizeof(ABp_Radar_1_C) == 0x0002C0, "Wrong size on ABp_Radar_1_C");
static_assert(offsetof(ABp_Radar_1_C, StaticMesh4) == 0x000290, "Member 'ABp_Radar_1_C::StaticMesh4' has a wrong offset!");
static_assert(offsetof(ABp_Radar_1_C, StaticMesh3) == 0x000298, "Member 'ABp_Radar_1_C::StaticMesh3' has a wrong offset!");
static_assert(offsetof(ABp_Radar_1_C, StaticMesh2) == 0x0002A0, "Member 'ABp_Radar_1_C::StaticMesh2' has a wrong offset!");
static_assert(offsetof(ABp_Radar_1_C, StaticMesh1) == 0x0002A8, "Member 'ABp_Radar_1_C::StaticMesh1' has a wrong offset!");
static_assert(offsetof(ABp_Radar_1_C, StaticMesh) == 0x0002B0, "Member 'ABp_Radar_1_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABp_Radar_1_C, DefaultSceneRoot) == 0x0002B8, "Member 'ABp_Radar_1_C::DefaultSceneRoot' has a wrong offset!");

}

