#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Flamethrower

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Pal_structs.hpp"


namespace SDK::Params
{

// Function BP_Flamethrower.BP_Flamethrower_C.TickShootingFire
// 0x0040 (0x0040 - 0x0000)
struct BP_Flamethrower_C_TickShootingFire final
{
public:
	double                                        DeltaTime;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        UseBulletInterval;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalShooterComponent*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmptyMagazine_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanReload_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DecrementBullet_ReturnValue;              // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C57[0x5];                                     // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C58[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Flamethrower_C_TickShootingFire) == 0x000008, "Wrong alignment on BP_Flamethrower_C_TickShootingFire");
static_assert(sizeof(BP_Flamethrower_C_TickShootingFire) == 0x000040, "Wrong size on BP_Flamethrower_C_TickShootingFire");
static_assert(offsetof(BP_Flamethrower_C_TickShootingFire, DeltaTime) == 0x000000, "Member 'BP_Flamethrower_C_TickShootingFire::DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_Flamethrower_C_TickShootingFire, UseBulletInterval) == 0x000008, "Member 'BP_Flamethrower_C_TickShootingFire::UseBulletInterval' has a wrong offset!");
static_assert(offsetof(BP_Flamethrower_C_TickShootingFire, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_Flamethrower_C_TickShootingFire::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flamethrower_C_TickShootingFire, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'BP_Flamethrower_C_TickShootingFire::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flamethrower_C_TickShootingFire, CallFunc_IsEmptyMagazine_ReturnValue) == 0x000020, "Member 'BP_Flamethrower_C_TickShootingFire::CallFunc_IsEmptyMagazine_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flamethrower_C_TickShootingFire, CallFunc_CanReload_ReturnValue) == 0x000021, "Member 'BP_Flamethrower_C_TickShootingFire::CallFunc_CanReload_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flamethrower_C_TickShootingFire, CallFunc_DecrementBullet_ReturnValue) == 0x000022, "Member 'BP_Flamethrower_C_TickShootingFire::CallFunc_DecrementBullet_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flamethrower_C_TickShootingFire, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'BP_Flamethrower_C_TickShootingFire::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flamethrower_C_TickShootingFire, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_Flamethrower_C_TickShootingFire::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flamethrower_C_TickShootingFire, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'BP_Flamethrower_C_TickShootingFire::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_Flamethrower.BP_Flamethrower_C.PlayIdleMotion
// 0x0001 (0x0001 - 0x0000)
struct BP_Flamethrower_C_PlayIdleMotion final
{
public:
	bool                                          StopAllMontages;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Flamethrower_C_PlayIdleMotion) == 0x000001, "Wrong alignment on BP_Flamethrower_C_PlayIdleMotion");
static_assert(sizeof(BP_Flamethrower_C_PlayIdleMotion) == 0x000001, "Wrong size on BP_Flamethrower_C_PlayIdleMotion");
static_assert(offsetof(BP_Flamethrower_C_PlayIdleMotion, StopAllMontages) == 0x000000, "Member 'BP_Flamethrower_C_PlayIdleMotion::StopAllMontages' has a wrong offset!");

// Function BP_Flamethrower.BP_Flamethrower_C.GetAttackType
// 0x0001 (0x0001 - 0x0000)
struct BP_Flamethrower_C_GetAttackType final
{
public:
	EPalAttackType                                AttackType;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Flamethrower_C_GetAttackType) == 0x000001, "Wrong alignment on BP_Flamethrower_C_GetAttackType");
static_assert(sizeof(BP_Flamethrower_C_GetAttackType) == 0x000001, "Wrong size on BP_Flamethrower_C_GetAttackType");
static_assert(offsetof(BP_Flamethrower_C_GetAttackType, AttackType) == 0x000000, "Member 'BP_Flamethrower_C_GetAttackType::AttackType' has a wrong offset!");

// Function BP_Flamethrower.BP_Flamethrower_C.ExecuteUbergraph_BP_Flamethrower
// 0x0018 (0x0018 - 0x0000)
struct BP_Flamethrower_C_ExecuteUbergraph_BP_Flamethrower final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C59[0x4];                                     // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_BeginShoot_FlameEffect;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmptyMagazine_ReturnValue;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Flamethrower_C_ExecuteUbergraph_BP_Flamethrower) == 0x000008, "Wrong alignment on BP_Flamethrower_C_ExecuteUbergraph_BP_Flamethrower");
static_assert(sizeof(BP_Flamethrower_C_ExecuteUbergraph_BP_Flamethrower) == 0x000018, "Wrong size on BP_Flamethrower_C_ExecuteUbergraph_BP_Flamethrower");
static_assert(offsetof(BP_Flamethrower_C_ExecuteUbergraph_BP_Flamethrower, EntryPoint) == 0x000000, "Member 'BP_Flamethrower_C_ExecuteUbergraph_BP_Flamethrower::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Flamethrower_C_ExecuteUbergraph_BP_Flamethrower, CallFunc_BeginShoot_FlameEffect) == 0x000008, "Member 'BP_Flamethrower_C_ExecuteUbergraph_BP_Flamethrower::CallFunc_BeginShoot_FlameEffect' has a wrong offset!");
static_assert(offsetof(BP_Flamethrower_C_ExecuteUbergraph_BP_Flamethrower, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'BP_Flamethrower_C_ExecuteUbergraph_BP_Flamethrower::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flamethrower_C_ExecuteUbergraph_BP_Flamethrower, CallFunc_IsEmptyMagazine_ReturnValue) == 0x000011, "Member 'BP_Flamethrower_C_ExecuteUbergraph_BP_Flamethrower::CallFunc_IsEmptyMagazine_ReturnValue' has a wrong offset!");

// Function BP_Flamethrower.BP_Flamethrower_C.IsUseLeftHandAttach
// 0x0001 (0x0001 - 0x0000)
struct BP_Flamethrower_C_IsUseLeftHandAttach final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Flamethrower_C_IsUseLeftHandAttach) == 0x000001, "Wrong alignment on BP_Flamethrower_C_IsUseLeftHandAttach");
static_assert(sizeof(BP_Flamethrower_C_IsUseLeftHandAttach) == 0x000001, "Wrong size on BP_Flamethrower_C_IsUseLeftHandAttach");
static_assert(offsetof(BP_Flamethrower_C_IsUseLeftHandAttach, ReturnValue) == 0x000000, "Member 'BP_Flamethrower_C_IsUseLeftHandAttach::ReturnValue' has a wrong offset!");

// Function BP_Flamethrower.BP_Flamethrower_C.GetWeaponDamage
// 0x0008 (0x0008 - 0x0000)
struct BP_Flamethrower_C_GetWeaponDamage final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetWeaponDamage_forPlayerFlamethrower_ReturnValue; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Flamethrower_C_GetWeaponDamage) == 0x000004, "Wrong alignment on BP_Flamethrower_C_GetWeaponDamage");
static_assert(sizeof(BP_Flamethrower_C_GetWeaponDamage) == 0x000008, "Wrong size on BP_Flamethrower_C_GetWeaponDamage");
static_assert(offsetof(BP_Flamethrower_C_GetWeaponDamage, ReturnValue) == 0x000000, "Member 'BP_Flamethrower_C_GetWeaponDamage::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flamethrower_C_GetWeaponDamage, CallFunc_GetWeaponDamage_forPlayerFlamethrower_ReturnValue) == 0x000004, "Member 'BP_Flamethrower_C_GetWeaponDamage::CallFunc_GetWeaponDamage_forPlayerFlamethrower_ReturnValue' has a wrong offset!");

// Function BP_Flamethrower.BP_Flamethrower_C.GetLeftHandTransform
// 0x00C0 (0x00C0 - 0x0000)
struct BP_Flamethrower_C_GetLeftHandTransform final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Flamethrower_C_GetLeftHandTransform) == 0x000010, "Wrong alignment on BP_Flamethrower_C_GetLeftHandTransform");
static_assert(sizeof(BP_Flamethrower_C_GetLeftHandTransform) == 0x0000C0, "Wrong size on BP_Flamethrower_C_GetLeftHandTransform");
static_assert(offsetof(BP_Flamethrower_C_GetLeftHandTransform, ReturnValue) == 0x000000, "Member 'BP_Flamethrower_C_GetLeftHandTransform::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Flamethrower_C_GetLeftHandTransform, CallFunc_GetSocketTransform_ReturnValue) == 0x000060, "Member 'BP_Flamethrower_C_GetLeftHandTransform::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");

}

