#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Arena_PalSelect_PalSlot

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Arena_PalSelect_PalSlot.WBP_Arena_PalSelect_PalSlot_C.ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot
// 0x0030 (0x0030 - 0x0000)
struct WBP_Arena_PalSelect_PalSlot_C_ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterParameter*       K2Node_CustomEvent_CharacterParameter;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392C[0x2];                                     // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCharacterID_ReturnValue;               // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsSetting;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392D[0x3];                                     // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Arena_PalSelect_PalSlot_C_ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot) == 0x000008, "Wrong alignment on WBP_Arena_PalSelect_PalSlot_C_ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot");
static_assert(sizeof(WBP_Arena_PalSelect_PalSlot_C_ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot) == 0x000030, "Wrong size on WBP_Arena_PalSelect_PalSlot_C_ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot");
static_assert(offsetof(WBP_Arena_PalSelect_PalSlot_C_ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot, EntryPoint) == 0x000000, "Member 'WBP_Arena_PalSelect_PalSlot_C_ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_PalSlot_C_ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot, Temp_bool_Variable) == 0x000004, "Member 'WBP_Arena_PalSelect_PalSlot_C_ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_PalSlot_C_ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot, Temp_byte_Variable) == 0x000005, "Member 'WBP_Arena_PalSelect_PalSlot_C_ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_PalSlot_C_ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot, Temp_byte_Variable_1) == 0x000006, "Member 'WBP_Arena_PalSelect_PalSlot_C_ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_PalSlot_C_ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000007, "Member 'WBP_Arena_PalSelect_PalSlot_C_ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_PalSlot_C_ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot, K2Node_CustomEvent_CharacterParameter) == 0x000008, "Member 'WBP_Arena_PalSelect_PalSlot_C_ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot::K2Node_CustomEvent_CharacterParameter' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_PalSlot_C_ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_Arena_PalSelect_PalSlot_C_ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_PalSlot_C_ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot, K2Node_Select_Default) == 0x000011, "Member 'WBP_Arena_PalSelect_PalSlot_C_ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_PalSlot_C_ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot, CallFunc_GetCharacterID_ReturnValue) == 0x000014, "Member 'WBP_Arena_PalSelect_PalSlot_C_ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot::CallFunc_GetCharacterID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_PalSlot_C_ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot, K2Node_CustomEvent_IsSetting) == 0x00001C, "Member 'WBP_Arena_PalSelect_PalSlot_C_ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot::K2Node_CustomEvent_IsSetting' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_PalSlot_C_ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot, CallFunc_PlayAnimation_ReturnValue) == 0x000020, "Member 'WBP_Arena_PalSelect_PalSlot_C_ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_PalSlot_C_ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot, CallFunc_PlayAnimation_ReturnValue_1) == 0x000028, "Member 'WBP_Arena_PalSelect_PalSlot_C_ExecuteUbergraph_WBP_Arena_PalSelect_PalSlot::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function WBP_Arena_PalSelect_PalSlot.WBP_Arena_PalSelect_PalSlot_C.SetNowSetting
// 0x0001 (0x0001 - 0x0000)
struct WBP_Arena_PalSelect_PalSlot_C_SetNowSetting final
{
public:
	bool                                          IsSetting;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Arena_PalSelect_PalSlot_C_SetNowSetting) == 0x000001, "Wrong alignment on WBP_Arena_PalSelect_PalSlot_C_SetNowSetting");
static_assert(sizeof(WBP_Arena_PalSelect_PalSlot_C_SetNowSetting) == 0x000001, "Wrong size on WBP_Arena_PalSelect_PalSlot_C_SetNowSetting");
static_assert(offsetof(WBP_Arena_PalSelect_PalSlot_C_SetNowSetting, IsSetting) == 0x000000, "Member 'WBP_Arena_PalSelect_PalSlot_C_SetNowSetting::IsSetting' has a wrong offset!");

// Function WBP_Arena_PalSelect_PalSlot.WBP_Arena_PalSelect_PalSlot_C.SetPalIcon
// 0x0008 (0x0008 - 0x0000)
struct WBP_Arena_PalSelect_PalSlot_C_SetPalIcon final
{
public:
	class UPalIndividualCharacterParameter*       CharacterParameter;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Arena_PalSelect_PalSlot_C_SetPalIcon) == 0x000008, "Wrong alignment on WBP_Arena_PalSelect_PalSlot_C_SetPalIcon");
static_assert(sizeof(WBP_Arena_PalSelect_PalSlot_C_SetPalIcon) == 0x000008, "Wrong size on WBP_Arena_PalSelect_PalSlot_C_SetPalIcon");
static_assert(offsetof(WBP_Arena_PalSelect_PalSlot_C_SetPalIcon, CharacterParameter) == 0x000000, "Member 'WBP_Arena_PalSelect_PalSlot_C_SetPalIcon::CharacterParameter' has a wrong offset!");

}

