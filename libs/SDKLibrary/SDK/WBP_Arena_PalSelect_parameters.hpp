#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Arena_PalSelect

#include "Basic.hpp"

#include "Pal_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_Arena_PalSelect.WBP_Arena_PalSelect_C.ConfirmParty
// 0x0001 (0x0001 - 0x0000)
struct WBP_Arena_PalSelect_C_ConfirmParty final
{
public:
	bool                                          Confirmed;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Arena_PalSelect_C_ConfirmParty) == 0x000001, "Wrong alignment on WBP_Arena_PalSelect_C_ConfirmParty");
static_assert(sizeof(WBP_Arena_PalSelect_C_ConfirmParty) == 0x000001, "Wrong size on WBP_Arena_PalSelect_C_ConfirmParty");
static_assert(offsetof(WBP_Arena_PalSelect_C_ConfirmParty, Confirmed) == 0x000000, "Member 'WBP_Arena_PalSelect_C_ConfirmParty::Confirmed' has a wrong offset!");

// Function WBP_Arena_PalSelect.WBP_Arena_PalSelect_C.DisplayDetail
// 0x0008 (0x0008 - 0x0000)
struct WBP_Arena_PalSelect_C_DisplayDetail final
{
public:
	class UPalIndividualCharacterHandle*          CharacterHandle;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Arena_PalSelect_C_DisplayDetail) == 0x000008, "Wrong alignment on WBP_Arena_PalSelect_C_DisplayDetail");
static_assert(sizeof(WBP_Arena_PalSelect_C_DisplayDetail) == 0x000008, "Wrong size on WBP_Arena_PalSelect_C_DisplayDetail");
static_assert(offsetof(WBP_Arena_PalSelect_C_DisplayDetail, CharacterHandle) == 0x000000, "Member 'WBP_Arena_PalSelect_C_DisplayDetail::CharacterHandle' has a wrong offset!");

// Function WBP_Arena_PalSelect.WBP_Arena_PalSelect_C.ExecuteUbergraph_WBP_Arena_PalSelect
// 0x0120 (0x0120 - 0x0000)
struct WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1497[0x4];                                     // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalHUDDispatchParameterBase*           CallFunc_GetParam_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalHUDDispatchParameter_ArenaPalSelect* K2Node_DynamicCast_AsPal_HUDDispatch_Parameter_Arena_Pal_Select; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1498[0x3];                                     // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_CurrentIndex;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1499[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149A[0x7];                                     // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_Menu_PalList_C*>            K2Node_MakeArray_Array;                            // 0x0068(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UWBP_Menu_PalList_C*>            K2Node_MakeArray_Array_1;                          // 0x0078(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149B[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(int32 CurrentIndex)>           K2Node_CreateDelegate_OutputDelegate_2;            // 0x008C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EPalArenaPlayerIndex PlayerIndex, const struct FPalArenaPlayerParty& NewParty)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x009C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPalUIActionBindData                   CallFunc_RegisterActionBinding_ReturnValue;        // 0x00B4(0x0004)(NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Confirmed;                      // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149C[0x1];                                     // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x00BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149D[0x3];                                     // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bResult)>                 K2Node_CreateDelegate_OutputDelegate_5;            // 0x00D4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149E[0x4];                                     // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLocalizedText_ReturnValue;             // 0x00E8(0x0018)()
	struct FGuid                                  CallFunc_Dialog_ReturnValue;                       // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalHUDService*                         CallFunc_GetHUDService_ReturnValue;                // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_Guid_ReturnValue;                 // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect) == 0x000008, "Wrong alignment on WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect");
static_assert(sizeof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect) == 0x000120, "Wrong size on WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, EntryPoint) == 0x000000, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, CallFunc_GetParam_ReturnValue) == 0x000028, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::CallFunc_GetParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, K2Node_DynamicCast_AsPal_HUDDispatch_Parameter_Arena_Pal_Select) == 0x000030, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::K2Node_DynamicCast_AsPal_HUDDispatch_Parameter_Arena_Pal_Select' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, K2Node_CustomEvent_CurrentIndex) == 0x00003C, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::K2Node_CustomEvent_CurrentIndex' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, CallFunc_Greater_IntInt_ReturnValue) == 0x000040, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, CallFunc_PlayAnimation_ReturnValue) == 0x000048, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x000050, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x000058, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, K2Node_MakeArray_Array) == 0x000068, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, K2Node_MakeArray_Array_1) == 0x000078, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000088, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, K2Node_CreateDelegate_OutputDelegate_2) == 0x00008C, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, K2Node_CreateDelegate_OutputDelegate_3) == 0x00009C, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, CallFunc_MakeLiteralName_ReturnValue) == 0x0000AC, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, CallFunc_RegisterActionBinding_ReturnValue) == 0x0000B4, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::CallFunc_RegisterActionBinding_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, CallFunc_Not_PreBool_ReturnValue) == 0x0000B8, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, CallFunc_IsValid_ReturnValue_1) == 0x0000B9, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, K2Node_CustomEvent_Confirmed) == 0x0000BA, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::K2Node_CustomEvent_Confirmed' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000BC, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, CallFunc_Array_Length_ReturnValue) == 0x0000CC, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, CallFunc_Less_IntInt_ReturnValue) == 0x0000D0, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000D4, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, CallFunc_GetLocalizedText_ReturnValue) == 0x0000E8, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::CallFunc_GetLocalizedText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, CallFunc_Dialog_ReturnValue) == 0x000100, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::CallFunc_Dialog_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, CallFunc_GetHUDService_ReturnValue) == 0x000110, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::CallFunc_GetHUDService_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect, CallFunc_IsValid_Guid_ReturnValue) == 0x000118, "Member 'WBP_Arena_PalSelect_C_ExecuteUbergraph_WBP_Arena_PalSelect::CallFunc_IsValid_Guid_ReturnValue' has a wrong offset!");

// Function WBP_Arena_PalSelect.WBP_Arena_PalSelect_C.OnPartySet__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_Arena_PalSelect_C_OnPartySet__DelegateSignature final
{
public:
	struct FPalArenaPlayerParty                   NewParty;                                          // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_Arena_PalSelect_C_OnPartySet__DelegateSignature) == 0x000008, "Wrong alignment on WBP_Arena_PalSelect_C_OnPartySet__DelegateSignature");
static_assert(sizeof(WBP_Arena_PalSelect_C_OnPartySet__DelegateSignature) == 0x000020, "Wrong size on WBP_Arena_PalSelect_C_OnPartySet__DelegateSignature");
static_assert(offsetof(WBP_Arena_PalSelect_C_OnPartySet__DelegateSignature, NewParty) == 0x000000, "Member 'WBP_Arena_PalSelect_C_OnPartySet__DelegateSignature::NewParty' has a wrong offset!");

// Function WBP_Arena_PalSelect.WBP_Arena_PalSelect_C.OnPartyUpdated
// 0x0030 (0x0030 - 0x0000)
struct WBP_Arena_PalSelect_C_OnPartyUpdated final
{
public:
	EPalArenaPlayerIndex                          PlayerIndex;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149F[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalArenaPlayerParty                   Party;                                             // 0x0008(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	EPalArenaPlayerIndex                          CallFunc_GetLocalPlayerIndex_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Arena_PalSelect_C_OnPartyUpdated) == 0x000008, "Wrong alignment on WBP_Arena_PalSelect_C_OnPartyUpdated");
static_assert(sizeof(WBP_Arena_PalSelect_C_OnPartyUpdated) == 0x000030, "Wrong size on WBP_Arena_PalSelect_C_OnPartyUpdated");
static_assert(offsetof(WBP_Arena_PalSelect_C_OnPartyUpdated, PlayerIndex) == 0x000000, "Member 'WBP_Arena_PalSelect_C_OnPartyUpdated::PlayerIndex' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_OnPartyUpdated, Party) == 0x000008, "Member 'WBP_Arena_PalSelect_C_OnPartyUpdated::Party' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_OnPartyUpdated, CallFunc_GetLocalPlayerIndex_ReturnValue) == 0x000028, "Member 'WBP_Arena_PalSelect_C_OnPartyUpdated::CallFunc_GetLocalPlayerIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_OnPartyUpdated, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000029, "Member 'WBP_Arena_PalSelect_C_OnPartyUpdated::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function WBP_Arena_PalSelect.WBP_Arena_PalSelect_C.OnTimerUpdated
// 0x0028 (0x0028 - 0x0000)
struct WBP_Arena_PalSelect_C_OnTimerUpdated final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A0[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
};
static_assert(alignof(WBP_Arena_PalSelect_C_OnTimerUpdated) == 0x000008, "Wrong alignment on WBP_Arena_PalSelect_C_OnTimerUpdated");
static_assert(sizeof(WBP_Arena_PalSelect_C_OnTimerUpdated) == 0x000028, "Wrong size on WBP_Arena_PalSelect_C_OnTimerUpdated");
static_assert(offsetof(WBP_Arena_PalSelect_C_OnTimerUpdated, Time) == 0x000000, "Member 'WBP_Arena_PalSelect_C_OnTimerUpdated::Time' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_OnTimerUpdated, CallFunc_Round_ReturnValue) == 0x000008, "Member 'WBP_Arena_PalSelect_C_OnTimerUpdated::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_OnTimerUpdated, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'WBP_Arena_PalSelect_C_OnTimerUpdated::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function WBP_Arena_PalSelect.WBP_Arena_PalSelect_C.OnUpdateSequenceIndex
// 0x0004 (0x0004 - 0x0000)
struct WBP_Arena_PalSelect_C_OnUpdateSequenceIndex final
{
public:
	int32                                         CurrentIndex;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Arena_PalSelect_C_OnUpdateSequenceIndex) == 0x000004, "Wrong alignment on WBP_Arena_PalSelect_C_OnUpdateSequenceIndex");
static_assert(sizeof(WBP_Arena_PalSelect_C_OnUpdateSequenceIndex) == 0x000004, "Wrong size on WBP_Arena_PalSelect_C_OnUpdateSequenceIndex");
static_assert(offsetof(WBP_Arena_PalSelect_C_OnUpdateSequenceIndex, CurrentIndex) == 0x000000, "Member 'WBP_Arena_PalSelect_C_OnUpdateSequenceIndex::CurrentIndex' has a wrong offset!");

// Function WBP_Arena_PalSelect.WBP_Arena_PalSelect_C.Setup
// 0x0150 (0x0150 - 0x0000)
struct WBP_Arena_PalSelect_C_Setup final
{
public:
	EPalArenaPlayerIndex                          Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalArenaPlayerIndex                          Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalArenaPlayerIndex                          Temp_byte_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A1[0x1];                                     // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPalArenaPlayerIndex                          Temp_byte_Variable_3;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A2[0x3];                                     // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(double Time)>                  K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 CurrentIndex)>           K2Node_CreateDelegate_OutputDelegate_2;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalArenaSequenceBase*                  CallFunc_GetCurrentSequence_ReturnValue;           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalArenaPlayerParty                   K2Node_MakeStruct_PalArenaPlayerParty;             // 0x0040(0x0020)()
	class UBP_ArenaSequence_PartySelect_C*        K2Node_DynamicCast_AsBP_Arena_Sequence_Party_Select; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A3[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPalArenaPlayerIndex PlayerIndex, const struct FPalArenaPlayerParty& NewParty)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EPalArenaPlayerIndex                          CallFunc_GetLocalPlayerIndex_ReturnValue;          // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A4[0x3];                                     // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPalArenaPlayerIndex, struct FPalArenaPlayerInfo> CallFunc_GetArenaPlayerInfoMap_ReturnValue;        // 0x0080(0x0050)(ConstParm)
	struct FPalArenaPlayerInfo                    CallFunc_Map_Find_Value;                           // 0x00D0(0x0038)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalArenaPlayerIndex                          K2Node_Select_Default;                             // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A5[0x6];                                     // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalArenaPlayerInfo                    CallFunc_Map_Find_Value_1;                         // 0x0110(0x0038)()
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Arena_PalSelect_C_Setup) == 0x000008, "Wrong alignment on WBP_Arena_PalSelect_C_Setup");
static_assert(sizeof(WBP_Arena_PalSelect_C_Setup) == 0x000150, "Wrong size on WBP_Arena_PalSelect_C_Setup");
static_assert(offsetof(WBP_Arena_PalSelect_C_Setup, Temp_byte_Variable) == 0x000000, "Member 'WBP_Arena_PalSelect_C_Setup::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Setup, Temp_byte_Variable_1) == 0x000001, "Member 'WBP_Arena_PalSelect_C_Setup::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Setup, Temp_byte_Variable_2) == 0x000002, "Member 'WBP_Arena_PalSelect_C_Setup::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Setup, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_Arena_PalSelect_C_Setup::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Setup, Temp_byte_Variable_3) == 0x000014, "Member 'WBP_Arena_PalSelect_C_Setup::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Setup, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'WBP_Arena_PalSelect_C_Setup::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Setup, K2Node_CreateDelegate_OutputDelegate_2) == 0x000028, "Member 'WBP_Arena_PalSelect_C_Setup::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Setup, CallFunc_GetCurrentSequence_ReturnValue) == 0x000038, "Member 'WBP_Arena_PalSelect_C_Setup::CallFunc_GetCurrentSequence_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Setup, K2Node_MakeStruct_PalArenaPlayerParty) == 0x000040, "Member 'WBP_Arena_PalSelect_C_Setup::K2Node_MakeStruct_PalArenaPlayerParty' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Setup, K2Node_DynamicCast_AsBP_Arena_Sequence_Party_Select) == 0x000060, "Member 'WBP_Arena_PalSelect_C_Setup::K2Node_DynamicCast_AsBP_Arena_Sequence_Party_Select' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Setup, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'WBP_Arena_PalSelect_C_Setup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Setup, K2Node_CreateDelegate_OutputDelegate_3) == 0x00006C, "Member 'WBP_Arena_PalSelect_C_Setup::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Setup, CallFunc_GetLocalPlayerIndex_ReturnValue) == 0x00007C, "Member 'WBP_Arena_PalSelect_C_Setup::CallFunc_GetLocalPlayerIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Setup, CallFunc_GetArenaPlayerInfoMap_ReturnValue) == 0x000080, "Member 'WBP_Arena_PalSelect_C_Setup::CallFunc_GetArenaPlayerInfoMap_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Setup, CallFunc_Map_Find_Value) == 0x0000D0, "Member 'WBP_Arena_PalSelect_C_Setup::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Setup, CallFunc_Map_Find_ReturnValue) == 0x000108, "Member 'WBP_Arena_PalSelect_C_Setup::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Setup, K2Node_Select_Default) == 0x000109, "Member 'WBP_Arena_PalSelect_C_Setup::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Setup, CallFunc_Map_Find_Value_1) == 0x000110, "Member 'WBP_Arena_PalSelect_C_Setup::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Setup, CallFunc_Map_Find_ReturnValue_1) == 0x000148, "Member 'WBP_Arena_PalSelect_C_Setup::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");

// Function WBP_Arena_PalSelect.WBP_Arena_PalSelect_C.SetupCharacterName
// 0x0138 (0x0138 - 0x0000)
struct WBP_Arena_PalSelect_C_SetupCharacterName final
{
public:
	EPalArenaPlayerIndex                          Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalArenaPlayerIndex                          Temp_byte_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalArenaPlayerIndex                          Temp_byte_Variable_2;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalArenaPlayerIndex                          Temp_byte_Variable_3;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalArenaPlayerIndex                          CallFunc_GetLocalPlayerIndex_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A6[0x3];                                     // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPalArenaPlayerIndex, struct FPalArenaPlayerInfo> CallFunc_GetArenaPlayerInfoMap_ReturnValue;        // 0x0008(0x0050)(ConstParm)
	struct FPalArenaPlayerInfo                    CallFunc_Map_Find_Value;                           // 0x0058(0x0038)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalArenaPlayerIndex                          K2Node_Select_Default;                             // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A7[0x6];                                     // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalArenaPlayerInfo                    CallFunc_Map_Find_Value_1;                         // 0x0098(0x0038)()
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A8[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetNickName_outName;                      // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00E8(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A9[0x7];                                     // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetNickName_outName_1;                    // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0118(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Arena_PalSelect_C_SetupCharacterName) == 0x000008, "Wrong alignment on WBP_Arena_PalSelect_C_SetupCharacterName");
static_assert(sizeof(WBP_Arena_PalSelect_C_SetupCharacterName) == 0x000138, "Wrong size on WBP_Arena_PalSelect_C_SetupCharacterName");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupCharacterName, Temp_byte_Variable) == 0x000000, "Member 'WBP_Arena_PalSelect_C_SetupCharacterName::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupCharacterName, Temp_byte_Variable_1) == 0x000001, "Member 'WBP_Arena_PalSelect_C_SetupCharacterName::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupCharacterName, Temp_byte_Variable_2) == 0x000002, "Member 'WBP_Arena_PalSelect_C_SetupCharacterName::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupCharacterName, Temp_byte_Variable_3) == 0x000003, "Member 'WBP_Arena_PalSelect_C_SetupCharacterName::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupCharacterName, CallFunc_GetLocalPlayerIndex_ReturnValue) == 0x000004, "Member 'WBP_Arena_PalSelect_C_SetupCharacterName::CallFunc_GetLocalPlayerIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupCharacterName, CallFunc_GetArenaPlayerInfoMap_ReturnValue) == 0x000008, "Member 'WBP_Arena_PalSelect_C_SetupCharacterName::CallFunc_GetArenaPlayerInfoMap_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupCharacterName, CallFunc_Map_Find_Value) == 0x000058, "Member 'WBP_Arena_PalSelect_C_SetupCharacterName::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupCharacterName, CallFunc_Map_Find_ReturnValue) == 0x000090, "Member 'WBP_Arena_PalSelect_C_SetupCharacterName::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupCharacterName, K2Node_Select_Default) == 0x000091, "Member 'WBP_Arena_PalSelect_C_SetupCharacterName::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupCharacterName, CallFunc_Map_Find_Value_1) == 0x000098, "Member 'WBP_Arena_PalSelect_C_SetupCharacterName::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupCharacterName, CallFunc_Map_Find_ReturnValue_1) == 0x0000D0, "Member 'WBP_Arena_PalSelect_C_SetupCharacterName::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupCharacterName, CallFunc_GetNickName_outName) == 0x0000D8, "Member 'WBP_Arena_PalSelect_C_SetupCharacterName::CallFunc_GetNickName_outName' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupCharacterName, CallFunc_Conv_StringToText_ReturnValue) == 0x0000E8, "Member 'WBP_Arena_PalSelect_C_SetupCharacterName::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupCharacterName, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'WBP_Arena_PalSelect_C_SetupCharacterName::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupCharacterName, CallFunc_GetNickName_outName_1) == 0x000108, "Member 'WBP_Arena_PalSelect_C_SetupCharacterName::CallFunc_GetNickName_outName_1' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupCharacterName, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000118, "Member 'WBP_Arena_PalSelect_C_SetupCharacterName::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupCharacterName, CallFunc_IsValid_ReturnValue_1) == 0x000130, "Member 'WBP_Arena_PalSelect_C_SetupCharacterName::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_Arena_PalSelect.WBP_Arena_PalSelect_C.SetupPalList
// 0x0098 (0x0098 - 0x0000)
struct WBP_Arena_PalSelect_C_SetupPalList final
{
public:
	TArray<class UPalIndividualCharacterParameter*> PalList;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          IsRival;                                           // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14AA[0x3];                                     // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPalIndividualCharacterHandle* Handle)> K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterParameter*       CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14AB[0x3];                                     // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPalIndividualCharacterHandle* Handle)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalCharacterManager*                   CallFunc_GetCharacterManager_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterHandle*          CallFunc_GetIndividualHandleFromCharacterParameter_ReturnValue; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14AC[0x3];                                     // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_Menu_PalList_C*>            K2Node_Select_Default;                             // 0x0070(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14AD[0x4];                                     // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_PalList_C*                    CallFunc_Array_Get_Item_1;                         // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Arena_PalSelect_C_SetupPalList) == 0x000008, "Wrong alignment on WBP_Arena_PalSelect_C_SetupPalList");
static_assert(sizeof(WBP_Arena_PalSelect_C_SetupPalList) == 0x000098, "Wrong size on WBP_Arena_PalSelect_C_SetupPalList");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupPalList, PalList) == 0x000000, "Member 'WBP_Arena_PalSelect_C_SetupPalList::PalList' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupPalList, IsRival) == 0x000010, "Member 'WBP_Arena_PalSelect_C_SetupPalList::IsRival' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupPalList, Temp_int_Array_Index_Variable) == 0x000014, "Member 'WBP_Arena_PalSelect_C_SetupPalList::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupPalList, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'WBP_Arena_PalSelect_C_SetupPalList::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupPalList, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_Arena_PalSelect_C_SetupPalList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupPalList, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WBP_Arena_PalSelect_C_SetupPalList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupPalList, K2Node_CreateDelegate_OutputDelegate_1) == 0x000034, "Member 'WBP_Arena_PalSelect_C_SetupPalList::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupPalList, K2Node_CreateDelegate_OutputDelegate_2) == 0x000044, "Member 'WBP_Arena_PalSelect_C_SetupPalList::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupPalList, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'WBP_Arena_PalSelect_C_SetupPalList::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupPalList, CallFunc_GetCharacterManager_ReturnValue) == 0x000058, "Member 'WBP_Arena_PalSelect_C_SetupPalList::CallFunc_GetCharacterManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupPalList, CallFunc_GetIndividualHandleFromCharacterParameter_ReturnValue) == 0x000060, "Member 'WBP_Arena_PalSelect_C_SetupPalList::CallFunc_GetIndividualHandleFromCharacterParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupPalList, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'WBP_Arena_PalSelect_C_SetupPalList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupPalList, Temp_bool_Variable) == 0x00006C, "Member 'WBP_Arena_PalSelect_C_SetupPalList::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupPalList, K2Node_Select_Default) == 0x000070, "Member 'WBP_Arena_PalSelect_C_SetupPalList::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupPalList, CallFunc_Array_Length_ReturnValue) == 0x000080, "Member 'WBP_Arena_PalSelect_C_SetupPalList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupPalList, CallFunc_Array_Get_Item_1) == 0x000088, "Member 'WBP_Arena_PalSelect_C_SetupPalList::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_SetupPalList, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'WBP_Arena_PalSelect_C_SetupPalList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Arena_PalSelect.WBP_Arena_PalSelect_C.ToggleSelectParty
// 0x00C0 (0x00C0 - 0x0000)
struct WBP_Arena_PalSelect_C_ToggleSelectParty final
{
public:
	class UPalIndividualCharacterHandle*          CharacterHandle;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterParameter*       CallFunc_TryGetIndividualParameter_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14AE[0x1];                                     // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14AF[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalArenaPlayerIndex                          CallFunc_GetLocalPlayerIndex_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14B0[0x6];                                     // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPalArenaPlayerIndex, struct FPalArenaPlayerInfo> CallFunc_GetArenaPlayerInfoMap_ReturnValue;        // 0x0028(0x0050)(ConstParm)
	struct FPalArenaPlayerInfo                    CallFunc_Map_Find_Value;                           // 0x0078(0x0038)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14B1[0x3];                                     // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Arena_PalSelect_C_ToggleSelectParty) == 0x000008, "Wrong alignment on WBP_Arena_PalSelect_C_ToggleSelectParty");
static_assert(sizeof(WBP_Arena_PalSelect_C_ToggleSelectParty) == 0x0000C0, "Wrong size on WBP_Arena_PalSelect_C_ToggleSelectParty");
static_assert(offsetof(WBP_Arena_PalSelect_C_ToggleSelectParty, CharacterHandle) == 0x000000, "Member 'WBP_Arena_PalSelect_C_ToggleSelectParty::CharacterHandle' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ToggleSelectParty, CallFunc_TryGetIndividualParameter_ReturnValue) == 0x000008, "Member 'WBP_Arena_PalSelect_C_ToggleSelectParty::CallFunc_TryGetIndividualParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ToggleSelectParty, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WBP_Arena_PalSelect_C_ToggleSelectParty::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ToggleSelectParty, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000011, "Member 'WBP_Arena_PalSelect_C_ToggleSelectParty::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ToggleSelectParty, CallFunc_IsValid_ReturnValue_1) == 0x000012, "Member 'WBP_Arena_PalSelect_C_ToggleSelectParty::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ToggleSelectParty, CallFunc_Array_Add_ReturnValue) == 0x000014, "Member 'WBP_Arena_PalSelect_C_ToggleSelectParty::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ToggleSelectParty, CallFunc_Array_RemoveItem_ReturnValue) == 0x000018, "Member 'WBP_Arena_PalSelect_C_ToggleSelectParty::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ToggleSelectParty, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'WBP_Arena_PalSelect_C_ToggleSelectParty::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ToggleSelectParty, CallFunc_Array_Contains_ReturnValue) == 0x000020, "Member 'WBP_Arena_PalSelect_C_ToggleSelectParty::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ToggleSelectParty, CallFunc_GetLocalPlayerIndex_ReturnValue) == 0x000021, "Member 'WBP_Arena_PalSelect_C_ToggleSelectParty::CallFunc_GetLocalPlayerIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ToggleSelectParty, CallFunc_GetArenaPlayerInfoMap_ReturnValue) == 0x000028, "Member 'WBP_Arena_PalSelect_C_ToggleSelectParty::CallFunc_GetArenaPlayerInfoMap_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ToggleSelectParty, CallFunc_Map_Find_Value) == 0x000078, "Member 'WBP_Arena_PalSelect_C_ToggleSelectParty::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ToggleSelectParty, CallFunc_Map_Find_ReturnValue) == 0x0000B0, "Member 'WBP_Arena_PalSelect_C_ToggleSelectParty::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ToggleSelectParty, CallFunc_Array_Length_ReturnValue_1) == 0x0000B4, "Member 'WBP_Arena_PalSelect_C_ToggleSelectParty::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ToggleSelectParty, CallFunc_Min_ReturnValue) == 0x0000B8, "Member 'WBP_Arena_PalSelect_C_ToggleSelectParty::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_ToggleSelectParty, CallFunc_Less_IntInt_ReturnValue) == 0x0000BC, "Member 'WBP_Arena_PalSelect_C_ToggleSelectParty::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_Arena_PalSelect.WBP_Arena_PalSelect_C.Update Party Count UI
// 0x00E8 (0x00E8 - 0x0000)
struct WBP_Arena_PalSelect_C_Update_Party_Count_UI final
{
public:
	struct FPalArenaPlayerParty                   Param_CurrentParty;                                // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          IsRival;                                           // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14B2[0x1];                                     // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalArenaPlayerIndex                          Temp_byte_Variable_2;                              // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalArenaPlayerIndex                          Temp_byte_Variable_3;                              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalArenaPlayerIndex                          Temp_byte_Variable_4;                              // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalArenaPlayerIndex                          Temp_byte_Variable_5;                              // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalArenaPlayerIndex                          CallFunc_GetLocalPlayerIndex_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14B3[0x7];                                     // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EPalArenaPlayerIndex, struct FPalArenaPlayerInfo> CallFunc_GetArenaPlayerInfoMap_ReturnValue;        // 0x0038(0x0050)(ConstParm)
	EPalArenaPlayerIndex                          K2Node_Select_Default_1;                           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14B4[0x7];                                     // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Arena_PalSelect_Ready_C*           K2Node_Select_Default_2;                           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EPalArenaPlayerIndex                          K2Node_Select_Default_3;                           // 0x0098(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14B5[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalArenaPlayerInfo                    CallFunc_Map_Find_Value;                           // 0x00A0(0x0038)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14B6[0x3];                                     // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Arena_PalSelect_C_Update_Party_Count_UI) == 0x000008, "Wrong alignment on WBP_Arena_PalSelect_C_Update_Party_Count_UI");
static_assert(sizeof(WBP_Arena_PalSelect_C_Update_Party_Count_UI) == 0x0000E8, "Wrong size on WBP_Arena_PalSelect_C_Update_Party_Count_UI");
static_assert(offsetof(WBP_Arena_PalSelect_C_Update_Party_Count_UI, Param_CurrentParty) == 0x000000, "Member 'WBP_Arena_PalSelect_C_Update_Party_Count_UI::Param_CurrentParty' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Update_Party_Count_UI, IsRival) == 0x000020, "Member 'WBP_Arena_PalSelect_C_Update_Party_Count_UI::IsRival' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Update_Party_Count_UI, Temp_bool_Variable) == 0x000021, "Member 'WBP_Arena_PalSelect_C_Update_Party_Count_UI::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Update_Party_Count_UI, Temp_byte_Variable) == 0x000022, "Member 'WBP_Arena_PalSelect_C_Update_Party_Count_UI::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Update_Party_Count_UI, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'WBP_Arena_PalSelect_C_Update_Party_Count_UI::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Update_Party_Count_UI, Temp_byte_Variable_1) == 0x000028, "Member 'WBP_Arena_PalSelect_C_Update_Party_Count_UI::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Update_Party_Count_UI, Temp_bool_Variable_1) == 0x000029, "Member 'WBP_Arena_PalSelect_C_Update_Party_Count_UI::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Update_Party_Count_UI, K2Node_Select_Default) == 0x00002A, "Member 'WBP_Arena_PalSelect_C_Update_Party_Count_UI::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Update_Party_Count_UI, Temp_byte_Variable_2) == 0x00002B, "Member 'WBP_Arena_PalSelect_C_Update_Party_Count_UI::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Update_Party_Count_UI, Temp_byte_Variable_3) == 0x00002C, "Member 'WBP_Arena_PalSelect_C_Update_Party_Count_UI::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Update_Party_Count_UI, Temp_byte_Variable_4) == 0x00002D, "Member 'WBP_Arena_PalSelect_C_Update_Party_Count_UI::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Update_Party_Count_UI, Temp_byte_Variable_5) == 0x00002E, "Member 'WBP_Arena_PalSelect_C_Update_Party_Count_UI::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Update_Party_Count_UI, Temp_bool_Variable_2) == 0x00002F, "Member 'WBP_Arena_PalSelect_C_Update_Party_Count_UI::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Update_Party_Count_UI, CallFunc_GetLocalPlayerIndex_ReturnValue) == 0x000030, "Member 'WBP_Arena_PalSelect_C_Update_Party_Count_UI::CallFunc_GetLocalPlayerIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Update_Party_Count_UI, CallFunc_GetArenaPlayerInfoMap_ReturnValue) == 0x000038, "Member 'WBP_Arena_PalSelect_C_Update_Party_Count_UI::CallFunc_GetArenaPlayerInfoMap_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Update_Party_Count_UI, K2Node_Select_Default_1) == 0x000088, "Member 'WBP_Arena_PalSelect_C_Update_Party_Count_UI::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Update_Party_Count_UI, K2Node_Select_Default_2) == 0x000090, "Member 'WBP_Arena_PalSelect_C_Update_Party_Count_UI::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Update_Party_Count_UI, K2Node_Select_Default_3) == 0x000098, "Member 'WBP_Arena_PalSelect_C_Update_Party_Count_UI::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Update_Party_Count_UI, CallFunc_Map_Find_Value) == 0x0000A0, "Member 'WBP_Arena_PalSelect_C_Update_Party_Count_UI::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Update_Party_Count_UI, CallFunc_Map_Find_ReturnValue) == 0x0000D8, "Member 'WBP_Arena_PalSelect_C_Update_Party_Count_UI::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Update_Party_Count_UI, CallFunc_Array_Length_ReturnValue_1) == 0x0000DC, "Member 'WBP_Arena_PalSelect_C_Update_Party_Count_UI::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_Update_Party_Count_UI, CallFunc_Min_ReturnValue) == 0x0000E0, "Member 'WBP_Arena_PalSelect_C_Update_Party_Count_UI::CallFunc_Min_ReturnValue' has a wrong offset!");

// Function WBP_Arena_PalSelect.WBP_Arena_PalSelect_C.UpdateLocalPartySlot
// 0x0028 (0x0028 - 0x0000)
struct WBP_Arena_PalSelect_C_UpdateLocalPartySlot final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_2;        // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_3;        // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_4;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14B7[0x6];                                     // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalIndividualCharacterParameter*       CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Arena_PalSelect_C_UpdateLocalPartySlot) == 0x000008, "Wrong alignment on WBP_Arena_PalSelect_C_UpdateLocalPartySlot");
static_assert(sizeof(WBP_Arena_PalSelect_C_UpdateLocalPartySlot) == 0x000028, "Wrong size on WBP_Arena_PalSelect_C_UpdateLocalPartySlot");
static_assert(offsetof(WBP_Arena_PalSelect_C_UpdateLocalPartySlot, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_Arena_PalSelect_C_UpdateLocalPartySlot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_UpdateLocalPartySlot, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_Arena_PalSelect_C_UpdateLocalPartySlot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_UpdateLocalPartySlot, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_Arena_PalSelect_C_UpdateLocalPartySlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_UpdateLocalPartySlot, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00000C, "Member 'WBP_Arena_PalSelect_C_UpdateLocalPartySlot::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_UpdateLocalPartySlot, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x00000D, "Member 'WBP_Arena_PalSelect_C_UpdateLocalPartySlot::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_UpdateLocalPartySlot, CallFunc_EqualEqual_NameName_ReturnValue_2) == 0x00000E, "Member 'WBP_Arena_PalSelect_C_UpdateLocalPartySlot::CallFunc_EqualEqual_NameName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_UpdateLocalPartySlot, CallFunc_EqualEqual_NameName_ReturnValue_3) == 0x00000F, "Member 'WBP_Arena_PalSelect_C_UpdateLocalPartySlot::CallFunc_EqualEqual_NameName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_UpdateLocalPartySlot, CallFunc_EqualEqual_NameName_ReturnValue_4) == 0x000010, "Member 'WBP_Arena_PalSelect_C_UpdateLocalPartySlot::CallFunc_EqualEqual_NameName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_UpdateLocalPartySlot, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'WBP_Arena_PalSelect_C_UpdateLocalPartySlot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_UpdateLocalPartySlot, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_Arena_PalSelect_C_UpdateLocalPartySlot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_UpdateLocalPartySlot, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'WBP_Arena_PalSelect_C_UpdateLocalPartySlot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_UpdateLocalPartySlot, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000024, "Member 'WBP_Arena_PalSelect_C_UpdateLocalPartySlot::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_UpdateLocalPartySlot, CallFunc_Less_IntInt_ReturnValue) == 0x000025, "Member 'WBP_Arena_PalSelect_C_UpdateLocalPartySlot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_UpdateLocalPartySlot, CallFunc_IsValid_ReturnValue_1) == 0x000026, "Member 'WBP_Arena_PalSelect_C_UpdateLocalPartySlot::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function WBP_Arena_PalSelect.WBP_Arena_PalSelect_C.BP_GetDesiredFocusTarget
// 0x0030 (0x0030 - 0x0000)
struct WBP_Arena_PalSelect_C_BP_GetDesiredFocusTarget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14B8[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Menu_PalList_C*                    CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14B9[0x3];                                     // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Arena_PalSelect_C_BP_GetDesiredFocusTarget) == 0x000008, "Wrong alignment on WBP_Arena_PalSelect_C_BP_GetDesiredFocusTarget");
static_assert(sizeof(WBP_Arena_PalSelect_C_BP_GetDesiredFocusTarget) == 0x000030, "Wrong size on WBP_Arena_PalSelect_C_BP_GetDesiredFocusTarget");
static_assert(offsetof(WBP_Arena_PalSelect_C_BP_GetDesiredFocusTarget, ReturnValue) == 0x000000, "Member 'WBP_Arena_PalSelect_C_BP_GetDesiredFocusTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_BP_GetDesiredFocusTarget, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_Arena_PalSelect_C_BP_GetDesiredFocusTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_BP_GetDesiredFocusTarget, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_Arena_PalSelect_C_BP_GetDesiredFocusTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_BP_GetDesiredFocusTarget, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_Arena_PalSelect_C_BP_GetDesiredFocusTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_BP_GetDesiredFocusTarget, CallFunc_Array_Get_Item) == 0x000018, "Member 'WBP_Arena_PalSelect_C_BP_GetDesiredFocusTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_BP_GetDesiredFocusTarget, CallFunc_IsVisible_ReturnValue) == 0x000020, "Member 'WBP_Arena_PalSelect_C_BP_GetDesiredFocusTarget::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_BP_GetDesiredFocusTarget, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'WBP_Arena_PalSelect_C_BP_GetDesiredFocusTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_C_BP_GetDesiredFocusTarget, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'WBP_Arena_PalSelect_C_BP_GetDesiredFocusTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

