#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ElecPanda

#include "Basic.hpp"

#include "BP_MonsterBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ElecPanda.BP_ElecPanda_C
// 0x0040 (0x0A90 - 0x0A50)
class ABP_ElecPanda_C final : public ABP_MonsterBase_C
{
public:
	class UPalSpeedCollisionComponent*            PalSpeedCollision;                                 // 0x0A50(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPalBodyPartsCapsuleComponent*          PalBodyPartsCapsule2;                              // 0x0A58(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPalBodyPartsCapsuleComponent*          PalBodyPartsCapsule1;                              // 0x0A60(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPalBodyPartsCapsuleComponent*          PalBodyPartsCapsule;                               // 0x0A68(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPalRideMarkerComponent*                PalRideMarker;                                     // 0x0A70(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPalShooterComponent*                   PalShooter;                                        // 0x0A78(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPalBodyPartsSphereComponent*           PalBodyPartsSphere;                                // 0x0A80(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_CoopParam_Cover_C*                  BP_CoopParam_Cover;                                // 0x0A88(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ElecPanda_C">();
	}
	static class ABP_ElecPanda_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ElecPanda_C>();
	}
};
static_assert(alignof(ABP_ElecPanda_C) == 0x000010, "Wrong alignment on ABP_ElecPanda_C");
static_assert(sizeof(ABP_ElecPanda_C) == 0x000A90, "Wrong size on ABP_ElecPanda_C");
static_assert(offsetof(ABP_ElecPanda_C, PalSpeedCollision) == 0x000A50, "Member 'ABP_ElecPanda_C::PalSpeedCollision' has a wrong offset!");
static_assert(offsetof(ABP_ElecPanda_C, PalBodyPartsCapsule2) == 0x000A58, "Member 'ABP_ElecPanda_C::PalBodyPartsCapsule2' has a wrong offset!");
static_assert(offsetof(ABP_ElecPanda_C, PalBodyPartsCapsule1) == 0x000A60, "Member 'ABP_ElecPanda_C::PalBodyPartsCapsule1' has a wrong offset!");
static_assert(offsetof(ABP_ElecPanda_C, PalBodyPartsCapsule) == 0x000A68, "Member 'ABP_ElecPanda_C::PalBodyPartsCapsule' has a wrong offset!");
static_assert(offsetof(ABP_ElecPanda_C, PalRideMarker) == 0x000A70, "Member 'ABP_ElecPanda_C::PalRideMarker' has a wrong offset!");
static_assert(offsetof(ABP_ElecPanda_C, PalShooter) == 0x000A78, "Member 'ABP_ElecPanda_C::PalShooter' has a wrong offset!");
static_assert(offsetof(ABP_ElecPanda_C, PalBodyPartsSphere) == 0x000A80, "Member 'ABP_ElecPanda_C::PalBodyPartsSphere' has a wrong offset!");
static_assert(offsetof(ABP_ElecPanda_C, BP_CoopParam_Cover) == 0x000A88, "Member 'ABP_ElecPanda_C::BP_CoopParam_Cover' has a wrong offset!");

}

