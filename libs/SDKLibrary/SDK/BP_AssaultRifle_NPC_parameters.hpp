#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AssaultRifle_NPC

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_AssaultRifle_NPC.BP_AssaultRifle_NPC_C.GetShootInterval
// 0x0008 (0x0008 - 0x0000)
struct BP_AssaultRifle_NPC_C_GetShootInterval final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AssaultRifle_NPC_C_GetShootInterval) == 0x000008, "Wrong alignment on BP_AssaultRifle_NPC_C_GetShootInterval");
static_assert(sizeof(BP_AssaultRifle_NPC_C_GetShootInterval) == 0x000008, "Wrong size on BP_AssaultRifle_NPC_C_GetShootInterval");
static_assert(offsetof(BP_AssaultRifle_NPC_C_GetShootInterval, Time) == 0x000000, "Member 'BP_AssaultRifle_NPC_C_GetShootInterval::Time' has a wrong offset!");

// Function BP_AssaultRifle_NPC.BP_AssaultRifle_NPC_C.GetMuzzleRotator
// 0x0030 (0x0030 - 0x0000)
struct BP_AssaultRifle_NPC_C_GetMuzzleRotator final
{
public:
	struct FRotator                               Rotator;                                           // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AssaultRifle_NPC_C_GetMuzzleRotator) == 0x000008, "Wrong alignment on BP_AssaultRifle_NPC_C_GetMuzzleRotator");
static_assert(sizeof(BP_AssaultRifle_NPC_C_GetMuzzleRotator) == 0x000030, "Wrong size on BP_AssaultRifle_NPC_C_GetMuzzleRotator");
static_assert(offsetof(BP_AssaultRifle_NPC_C_GetMuzzleRotator, Rotator) == 0x000000, "Member 'BP_AssaultRifle_NPC_C_GetMuzzleRotator::Rotator' has a wrong offset!");
static_assert(offsetof(BP_AssaultRifle_NPC_C_GetMuzzleRotator, CallFunc_GetSocketRotation_ReturnValue) == 0x000018, "Member 'BP_AssaultRifle_NPC_C_GetMuzzleRotator::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");

// Function BP_AssaultRifle_NPC.BP_AssaultRifle_NPC_C.GetMuzzleLocation
// 0x0030 (0x0030 - 0x0000)
struct BP_AssaultRifle_NPC_C_GetMuzzleLocation final
{
public:
	struct FVector                                MuzzleLocation;                                    // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AssaultRifle_NPC_C_GetMuzzleLocation) == 0x000008, "Wrong alignment on BP_AssaultRifle_NPC_C_GetMuzzleLocation");
static_assert(sizeof(BP_AssaultRifle_NPC_C_GetMuzzleLocation) == 0x000030, "Wrong size on BP_AssaultRifle_NPC_C_GetMuzzleLocation");
static_assert(offsetof(BP_AssaultRifle_NPC_C_GetMuzzleLocation, MuzzleLocation) == 0x000000, "Member 'BP_AssaultRifle_NPC_C_GetMuzzleLocation::MuzzleLocation' has a wrong offset!");
static_assert(offsetof(BP_AssaultRifle_NPC_C_GetMuzzleLocation, CallFunc_GetSocketLocation_ReturnValue) == 0x000018, "Member 'BP_AssaultRifle_NPC_C_GetMuzzleLocation::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");

// Function BP_AssaultRifle_NPC.BP_AssaultRifle_NPC_C.GetMuzzleEffect
// 0x0008 (0x0008 - 0x0000)
struct BP_AssaultRifle_NPC_C_GetMuzzleEffect final
{
public:
	class UNiagaraSystem*                         NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AssaultRifle_NPC_C_GetMuzzleEffect) == 0x000008, "Wrong alignment on BP_AssaultRifle_NPC_C_GetMuzzleEffect");
static_assert(sizeof(BP_AssaultRifle_NPC_C_GetMuzzleEffect) == 0x000008, "Wrong size on BP_AssaultRifle_NPC_C_GetMuzzleEffect");
static_assert(offsetof(BP_AssaultRifle_NPC_C_GetMuzzleEffect, NewParam) == 0x000000, "Member 'BP_AssaultRifle_NPC_C_GetMuzzleEffect::NewParam' has a wrong offset!");

// Function BP_AssaultRifle_NPC.BP_AssaultRifle_NPC_C.GetBulletClass
// 0x0008 (0x0008 - 0x0000)
struct BP_AssaultRifle_NPC_C_GetBulletClass final
{
public:
	class UClass*                                 NewParam;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AssaultRifle_NPC_C_GetBulletClass) == 0x000008, "Wrong alignment on BP_AssaultRifle_NPC_C_GetBulletClass");
static_assert(sizeof(BP_AssaultRifle_NPC_C_GetBulletClass) == 0x000008, "Wrong size on BP_AssaultRifle_NPC_C_GetBulletClass");
static_assert(offsetof(BP_AssaultRifle_NPC_C_GetBulletClass, NewParam) == 0x000000, "Member 'BP_AssaultRifle_NPC_C_GetBulletClass::NewParam' has a wrong offset!");

// Function BP_AssaultRifle_NPC.BP_AssaultRifle_NPC_C.ExecuteUbergraph_BP_AssaultRifle_NPC
// 0x0004 (0x0004 - 0x0000)
struct BP_AssaultRifle_NPC_C_ExecuteUbergraph_BP_AssaultRifle_NPC final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AssaultRifle_NPC_C_ExecuteUbergraph_BP_AssaultRifle_NPC) == 0x000004, "Wrong alignment on BP_AssaultRifle_NPC_C_ExecuteUbergraph_BP_AssaultRifle_NPC");
static_assert(sizeof(BP_AssaultRifle_NPC_C_ExecuteUbergraph_BP_AssaultRifle_NPC) == 0x000004, "Wrong size on BP_AssaultRifle_NPC_C_ExecuteUbergraph_BP_AssaultRifle_NPC");
static_assert(offsetof(BP_AssaultRifle_NPC_C_ExecuteUbergraph_BP_AssaultRifle_NPC, EntryPoint) == 0x000000, "Member 'BP_AssaultRifle_NPC_C_ExecuteUbergraph_BP_AssaultRifle_NPC::EntryPoint' has a wrong offset!");

// Function BP_AssaultRifle_NPC.BP_AssaultRifle_NPC_C.IsUseLeftHandAttach
// 0x0001 (0x0001 - 0x0000)
struct BP_AssaultRifle_NPC_C_IsUseLeftHandAttach final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AssaultRifle_NPC_C_IsUseLeftHandAttach) == 0x000001, "Wrong alignment on BP_AssaultRifle_NPC_C_IsUseLeftHandAttach");
static_assert(sizeof(BP_AssaultRifle_NPC_C_IsUseLeftHandAttach) == 0x000001, "Wrong size on BP_AssaultRifle_NPC_C_IsUseLeftHandAttach");
static_assert(offsetof(BP_AssaultRifle_NPC_C_IsUseLeftHandAttach, ReturnValue) == 0x000000, "Member 'BP_AssaultRifle_NPC_C_IsUseLeftHandAttach::ReturnValue' has a wrong offset!");

// Function BP_AssaultRifle_NPC.BP_AssaultRifle_NPC_C.GetWeaponDamage
// 0x0008 (0x0008 - 0x0000)
struct BP_AssaultRifle_NPC_C_GetWeaponDamage final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcNPCWeaponDamage_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AssaultRifle_NPC_C_GetWeaponDamage) == 0x000004, "Wrong alignment on BP_AssaultRifle_NPC_C_GetWeaponDamage");
static_assert(sizeof(BP_AssaultRifle_NPC_C_GetWeaponDamage) == 0x000008, "Wrong size on BP_AssaultRifle_NPC_C_GetWeaponDamage");
static_assert(offsetof(BP_AssaultRifle_NPC_C_GetWeaponDamage, ReturnValue) == 0x000000, "Member 'BP_AssaultRifle_NPC_C_GetWeaponDamage::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AssaultRifle_NPC_C_GetWeaponDamage, CallFunc_CalcNPCWeaponDamage_ReturnValue) == 0x000004, "Member 'BP_AssaultRifle_NPC_C_GetWeaponDamage::CallFunc_CalcNPCWeaponDamage_ReturnValue' has a wrong offset!");

// Function BP_AssaultRifle_NPC.BP_AssaultRifle_NPC_C.GetNPCWeaponDamage
// 0x0004 (0x0004 - 0x0000)
struct BP_AssaultRifle_NPC_C_GetNPCWeaponDamage final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AssaultRifle_NPC_C_GetNPCWeaponDamage) == 0x000004, "Wrong alignment on BP_AssaultRifle_NPC_C_GetNPCWeaponDamage");
static_assert(sizeof(BP_AssaultRifle_NPC_C_GetNPCWeaponDamage) == 0x000004, "Wrong size on BP_AssaultRifle_NPC_C_GetNPCWeaponDamage");
static_assert(offsetof(BP_AssaultRifle_NPC_C_GetNPCWeaponDamage, ReturnValue) == 0x000000, "Member 'BP_AssaultRifle_NPC_C_GetNPCWeaponDamage::ReturnValue' has a wrong offset!");

// Function BP_AssaultRifle_NPC.BP_AssaultRifle_NPC_C.GetLeftHandTransform
// 0x00C0 (0x00C0 - 0x0000)
struct BP_AssaultRifle_NPC_C_GetLeftHandTransform final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0060(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AssaultRifle_NPC_C_GetLeftHandTransform) == 0x000010, "Wrong alignment on BP_AssaultRifle_NPC_C_GetLeftHandTransform");
static_assert(sizeof(BP_AssaultRifle_NPC_C_GetLeftHandTransform) == 0x0000C0, "Wrong size on BP_AssaultRifle_NPC_C_GetLeftHandTransform");
static_assert(offsetof(BP_AssaultRifle_NPC_C_GetLeftHandTransform, ReturnValue) == 0x000000, "Member 'BP_AssaultRifle_NPC_C_GetLeftHandTransform::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AssaultRifle_NPC_C_GetLeftHandTransform, CallFunc_GetSocketTransform_ReturnValue) == 0x000060, "Member 'BP_AssaultRifle_NPC_C_GetLeftHandTransform::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");

// Function BP_AssaultRifle_NPC.BP_AssaultRifle_NPC_C.GetDefaultBlurAngle
// 0x0004 (0x0004 - 0x0000)
struct BP_AssaultRifle_NPC_C_GetDefaultBlurAngle final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AssaultRifle_NPC_C_GetDefaultBlurAngle) == 0x000004, "Wrong alignment on BP_AssaultRifle_NPC_C_GetDefaultBlurAngle");
static_assert(sizeof(BP_AssaultRifle_NPC_C_GetDefaultBlurAngle) == 0x000004, "Wrong size on BP_AssaultRifle_NPC_C_GetDefaultBlurAngle");
static_assert(offsetof(BP_AssaultRifle_NPC_C_GetDefaultBlurAngle, ReturnValue) == 0x000000, "Member 'BP_AssaultRifle_NPC_C_GetDefaultBlurAngle::ReturnValue' has a wrong offset!");

}

