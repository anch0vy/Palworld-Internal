#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AssignBoard

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Pal_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_AssignBoard.WBP_AssignBoard_C.AnmEvent_SelectWork
// 0x0008 (0x0008 - 0x0000)
struct WBP_AssignBoard_C_AnmEvent_SelectWork final
{
public:
	class UWBP_AssignBoard_WorkListBase_C*        SelectWidget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_C_AnmEvent_SelectWork) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_AnmEvent_SelectWork");
static_assert(sizeof(WBP_AssignBoard_C_AnmEvent_SelectWork) == 0x000008, "Wrong size on WBP_AssignBoard_C_AnmEvent_SelectWork");
static_assert(offsetof(WBP_AssignBoard_C_AnmEvent_SelectWork, SelectWidget) == 0x000000, "Member 'WBP_AssignBoard_C_AnmEvent_SelectWork::SelectWidget' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_0_OnCreatedSlot__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_0_OnCreatedSlot__DelegateSignature final
{
public:
	class UWBP_PalCharacterSlotButtonBase_C*      CreatedSlot;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_0_OnCreatedSlot__DelegateSignature) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_0_OnCreatedSlot__DelegateSignature");
static_assert(sizeof(WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_0_OnCreatedSlot__DelegateSignature) == 0x000008, "Wrong size on WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_0_OnCreatedSlot__DelegateSignature");
static_assert(offsetof(WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_0_OnCreatedSlot__DelegateSignature, CreatedSlot) == 0x000000, "Member 'WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_0_OnCreatedSlot__DelegateSignature::CreatedSlot' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_1_OnHoveredSlot__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_1_OnHoveredSlot__DelegateSignature final
{
public:
	class UWBP_PalCharacterSlotButtonBase_C*      Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_1_OnHoveredSlot__DelegateSignature) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_1_OnHoveredSlot__DelegateSignature");
static_assert(sizeof(WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_1_OnHoveredSlot__DelegateSignature) == 0x000008, "Wrong size on WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_1_OnHoveredSlot__DelegateSignature");
static_assert(offsetof(WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_1_OnHoveredSlot__DelegateSignature, Widget) == 0x000000, "Member 'WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_1_OnHoveredSlot__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_2_OnLeftClickedSlot__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_2_OnLeftClickedSlot__DelegateSignature final
{
public:
	class UWBP_PalCharacterSlotButtonBase_C*      Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EPalItemSlotPressType                         PressType;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_2_OnLeftClickedSlot__DelegateSignature) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_2_OnLeftClickedSlot__DelegateSignature");
static_assert(sizeof(WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_2_OnLeftClickedSlot__DelegateSignature) == 0x000010, "Wrong size on WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_2_OnLeftClickedSlot__DelegateSignature");
static_assert(offsetof(WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_2_OnLeftClickedSlot__DelegateSignature, Widget) == 0x000000, "Member 'WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_2_OnLeftClickedSlot__DelegateSignature::Widget' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_2_OnLeftClickedSlot__DelegateSignature, PressType) == 0x000008, "Member 'WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_2_OnLeftClickedSlot__DelegateSignature::PressType' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_3_OnUnhoveredSlot__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_3_OnUnhoveredSlot__DelegateSignature final
{
public:
	class UWBP_PalCharacterSlotButtonBase_C*      Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_3_OnUnhoveredSlot__DelegateSignature) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_3_OnUnhoveredSlot__DelegateSignature");
static_assert(sizeof(WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_3_OnUnhoveredSlot__DelegateSignature) == 0x000008, "Wrong size on WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_3_OnUnhoveredSlot__DelegateSignature");
static_assert(offsetof(WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_3_OnUnhoveredSlot__DelegateSignature, Widget) == 0x000000, "Member 'WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_3_OnUnhoveredSlot__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_4_OnRightClickedSlot__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_4_OnRightClickedSlot__DelegateSignature final
{
public:
	class UWBP_PalCharacterSlotButtonBase_C*      Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_4_OnRightClickedSlot__DelegateSignature) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_4_OnRightClickedSlot__DelegateSignature");
static_assert(sizeof(WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_4_OnRightClickedSlot__DelegateSignature) == 0x000008, "Wrong size on WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_4_OnRightClickedSlot__DelegateSignature");
static_assert(offsetof(WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_4_OnRightClickedSlot__DelegateSignature, Widget) == 0x000000, "Member 'WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_4_OnRightClickedSlot__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.BndEvt__WBP_AssignBoard_WBP_PalInvisibleButton_Sort_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalInvisibleButton_Sort_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature final
{
public:
	class UCommonButtonBase*                      Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalInvisibleButton_Sort_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalInvisibleButton_Sort_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature");
static_assert(sizeof(WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalInvisibleButton_Sort_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature) == 0x000008, "Wrong size on WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalInvisibleButton_Sort_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature");
static_assert(offsetof(WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalInvisibleButton_Sort_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_AssignBoard_C_BndEvt__WBP_AssignBoard_WBP_PalInvisibleButton_Sort_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature::Button' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.CreateWorkListWidget
// 0x0098 (0x0098 - 0x0000)
struct WBP_AssignBoard_C_CreateWorkListWidget final
{
public:
	struct FPalUIBaseCampWorkFixedAssignInfo      AssignInfo;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UWBP_AssignBoard_WorkListBase_C*        CreatedWidget;                                     // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EPalWorkType                                  CallFunc_GetWorkType_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BF9[0x3];                                     // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UWBP_AssignBoard_WorkListBase_C* Widget)> K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_AssignBoard_WorkListBase_C* Widget)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BFA[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_AssignBoard_WorkListBase_C* Widget)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BFB[0x7];                                     // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetLocalPlayerController_ReturnValue;     // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Map_Find_Value;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BFC[0x7];                                     // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default;                             // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_AssignBoard_WorkListBase_C*        K2Node_DynamicCast_AsWBP_Assign_Board_Work_List_Base; // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_C_CreateWorkListWidget) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_CreateWorkListWidget");
static_assert(sizeof(WBP_AssignBoard_C_CreateWorkListWidget) == 0x000098, "Wrong size on WBP_AssignBoard_C_CreateWorkListWidget");
static_assert(offsetof(WBP_AssignBoard_C_CreateWorkListWidget, AssignInfo) == 0x000000, "Member 'WBP_AssignBoard_C_CreateWorkListWidget::AssignInfo' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_CreateWorkListWidget, CreatedWidget) == 0x000010, "Member 'WBP_AssignBoard_C_CreateWorkListWidget::CreatedWidget' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_CreateWorkListWidget, CallFunc_GetWorkType_ReturnValue) == 0x000018, "Member 'WBP_AssignBoard_C_CreateWorkListWidget::CallFunc_GetWorkType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_CreateWorkListWidget, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'WBP_AssignBoard_C_CreateWorkListWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_CreateWorkListWidget, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'WBP_AssignBoard_C_CreateWorkListWidget::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_CreateWorkListWidget, Temp_class_Variable) == 0x000040, "Member 'WBP_AssignBoard_C_CreateWorkListWidget::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_CreateWorkListWidget, K2Node_CreateDelegate_OutputDelegate_2) == 0x000048, "Member 'WBP_AssignBoard_C_CreateWorkListWidget::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_CreateWorkListWidget, Temp_bool_Variable) == 0x000058, "Member 'WBP_AssignBoard_C_CreateWorkListWidget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_CreateWorkListWidget, CallFunc_GetLocalPlayerController_ReturnValue) == 0x000060, "Member 'WBP_AssignBoard_C_CreateWorkListWidget::CallFunc_GetLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_CreateWorkListWidget, CallFunc_Map_Find_Value) == 0x000068, "Member 'WBP_AssignBoard_C_CreateWorkListWidget::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_CreateWorkListWidget, CallFunc_Map_Find_ReturnValue) == 0x000070, "Member 'WBP_AssignBoard_C_CreateWorkListWidget::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_CreateWorkListWidget, K2Node_Select_Default) == 0x000078, "Member 'WBP_AssignBoard_C_CreateWorkListWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_CreateWorkListWidget, CallFunc_Create_ReturnValue) == 0x000080, "Member 'WBP_AssignBoard_C_CreateWorkListWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_CreateWorkListWidget, K2Node_DynamicCast_AsWBP_Assign_Board_Work_List_Base) == 0x000088, "Member 'WBP_AssignBoard_C_CreateWorkListWidget::K2Node_DynamicCast_AsWBP_Assign_Board_Work_List_Base' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_CreateWorkListWidget, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'WBP_AssignBoard_C_CreateWorkListWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.EndSelectWorker
// 0x0050 (0x0050 - 0x0000)
struct WBP_AssignBoard_C_EndSelectWorker final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BFD[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EPalWorkSuitability>                   K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
	TArray<class UWidget*>                        CallFunc_Get_All_Children_widgets;                 // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BFE[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_AssignBoard_PalSlotButton_C*       K2Node_DynamicCast_AsWBP_Assign_Board_Pal_Slot_Button; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_C_EndSelectWorker) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_EndSelectWorker");
static_assert(sizeof(WBP_AssignBoard_C_EndSelectWorker) == 0x000050, "Wrong size on WBP_AssignBoard_C_EndSelectWorker");
static_assert(offsetof(WBP_AssignBoard_C_EndSelectWorker, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_AssignBoard_C_EndSelectWorker::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_EndSelectWorker, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_AssignBoard_C_EndSelectWorker::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_EndSelectWorker, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_AssignBoard_C_EndSelectWorker::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_EndSelectWorker, K2Node_MakeArray_Array) == 0x000010, "Member 'WBP_AssignBoard_C_EndSelectWorker::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_EndSelectWorker, CallFunc_Get_All_Children_widgets) == 0x000020, "Member 'WBP_AssignBoard_C_EndSelectWorker::CallFunc_Get_All_Children_widgets' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_EndSelectWorker, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_AssignBoard_C_EndSelectWorker::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_EndSelectWorker, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'WBP_AssignBoard_C_EndSelectWorker::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_EndSelectWorker, K2Node_DynamicCast_AsWBP_Assign_Board_Pal_Slot_Button) == 0x000040, "Member 'WBP_AssignBoard_C_EndSelectWorker::K2Node_DynamicCast_AsWBP_Assign_Board_Pal_Slot_Button' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_EndSelectWorker, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WBP_AssignBoard_C_EndSelectWorker::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_EndSelectWorker, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'WBP_AssignBoard_C_EndSelectWorker::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.ExecuteUbergraph_WBP_AssignBoard
// 0x00F8 (0x00F8 - 0x0000)
struct WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_AssignBoard_WorkListBase_C*        K2Node_CustomEvent_SelectWidget;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BFF[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UScrollBox*                             CallFunc_GetScrollBox_ScrollBox;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C00[0x4];                                     // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UScrollBox*                             CallFunc_GetScrollBox_ScrollBox_1;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue_1;             // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWBP_AssignBoard_WorkListBase_C*        K2Node_DynamicCast_AsWBP_Assign_Board_Work_List_Base; // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C01[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C02[0x7];                                     // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_AssignBoard_WorkListBase_C*        K2Node_DynamicCast_AsWBP_Assign_Board_Work_List_Base_1; // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C03[0x3];                                     // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C04[0x2];                                     // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C05[0x2];                                     // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_PalCharacterSlotButtonBase_C*      K2Node_ComponentBoundEvent_createdSlot;            // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWrapBoxSlot*                           CallFunc_SlotAsWrapBoxSlot_ReturnValue;            // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_PalCharacterSlotButtonBase_C*      K2Node_ComponentBoundEvent_Widget_3;               // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C06[0x7];                                     // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_PalCharacterSlotButtonBase_C*      K2Node_ComponentBoundEvent_Widget_2;               // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EPalItemSlotPressType                         K2Node_ComponentBoundEvent_pressType;              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C07[0x7];                                     // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_PalCharacterSlotButtonBase_C*      K2Node_ComponentBoundEvent_Widget_1;               // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_PalCharacterSlotButtonBase_C*      K2Node_ComponentBoundEvent_Widget;                 // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCommonButtonBase*                      K2Node_ComponentBoundEvent_Button;                 // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard");
static_assert(sizeof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard) == 0x0000F8, "Wrong size on WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, EntryPoint) == 0x000000, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, K2Node_CustomEvent_SelectWidget) == 0x000008, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::K2Node_CustomEvent_SelectWidget' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, CallFunc_GetScrollBox_ScrollBox) == 0x000018, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::CallFunc_GetScrollBox_ScrollBox' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, CallFunc_GetAllChildren_ReturnValue) == 0x000020, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, Temp_int_Array_Index_Variable_1) == 0x000038, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, CallFunc_GetScrollBox_ScrollBox_1) == 0x000040, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::CallFunc_GetScrollBox_ScrollBox_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, CallFunc_Array_Get_Item) == 0x000048, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, CallFunc_GetAllChildren_ReturnValue_1) == 0x000050, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::CallFunc_GetAllChildren_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, K2Node_DynamicCast_AsWBP_Assign_Board_Work_List_Base) == 0x000060, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::K2Node_DynamicCast_AsWBP_Assign_Board_Work_List_Base' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000078, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, K2Node_DynamicCast_AsWBP_Assign_Board_Work_List_Base_1) == 0x000080, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::K2Node_DynamicCast_AsWBP_Assign_Board_Work_List_Base_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, CallFunc_Array_Length_ReturnValue_1) == 0x00008C, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, CallFunc_IsValid_ReturnValue) == 0x000091, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, Temp_int_Loop_Counter_Variable_1) == 0x000094, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000098, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, CallFunc_Less_IntInt_ReturnValue_1) == 0x000099, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, CallFunc_Add_IntInt_ReturnValue_1) == 0x00009C, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, K2Node_ComponentBoundEvent_createdSlot) == 0x0000A0, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::K2Node_ComponentBoundEvent_createdSlot' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, K2Node_MakeStruct_Margin) == 0x0000A8, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, CallFunc_SlotAsWrapBoxSlot_ReturnValue) == 0x0000B8, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::CallFunc_SlotAsWrapBoxSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, K2Node_ComponentBoundEvent_Widget_3) == 0x0000C0, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::K2Node_ComponentBoundEvent_Widget_3' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, CallFunc_IsValid_ReturnValue_1) == 0x0000C8, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, K2Node_ComponentBoundEvent_Widget_2) == 0x0000D0, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::K2Node_ComponentBoundEvent_Widget_2' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, K2Node_ComponentBoundEvent_pressType) == 0x0000D8, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::K2Node_ComponentBoundEvent_pressType' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, K2Node_ComponentBoundEvent_Widget_1) == 0x0000E0, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::K2Node_ComponentBoundEvent_Widget_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, K2Node_ComponentBoundEvent_Widget) == 0x0000E8, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::K2Node_ComponentBoundEvent_Widget' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard, K2Node_ComponentBoundEvent_Button) == 0x0000F0, "Member 'WBP_AssignBoard_C_ExecuteUbergraph_WBP_AssignBoard::K2Node_ComponentBoundEvent_Button' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.GetWorkerTopButton
// 0x0050 (0x0050 - 0x0000)
struct WBP_AssignBoard_C_GetWorkerTopButton final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C08[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_Get_All_Children_widgets;                 // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C09[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C0A[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_AssignBoard_PalSlotButton_C*       K2Node_DynamicCast_AsWBP_Assign_Board_Pal_Slot_Button; // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_C_GetWorkerTopButton) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_GetWorkerTopButton");
static_assert(sizeof(WBP_AssignBoard_C_GetWorkerTopButton) == 0x000050, "Wrong size on WBP_AssignBoard_C_GetWorkerTopButton");
static_assert(offsetof(WBP_AssignBoard_C_GetWorkerTopButton, Widget) == 0x000000, "Member 'WBP_AssignBoard_C_GetWorkerTopButton::Widget' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_GetWorkerTopButton, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_AssignBoard_C_GetWorkerTopButton::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_GetWorkerTopButton, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_AssignBoard_C_GetWorkerTopButton::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_GetWorkerTopButton, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_AssignBoard_C_GetWorkerTopButton::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_GetWorkerTopButton, CallFunc_Get_All_Children_widgets) == 0x000018, "Member 'WBP_AssignBoard_C_GetWorkerTopButton::CallFunc_Get_All_Children_widgets' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_GetWorkerTopButton, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WBP_AssignBoard_C_GetWorkerTopButton::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_GetWorkerTopButton, CallFunc_Array_Get_Item) == 0x000030, "Member 'WBP_AssignBoard_C_GetWorkerTopButton::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_GetWorkerTopButton, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'WBP_AssignBoard_C_GetWorkerTopButton::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_GetWorkerTopButton, K2Node_DynamicCast_AsWBP_Assign_Board_Pal_Slot_Button) == 0x000040, "Member 'WBP_AssignBoard_C_GetWorkerTopButton::K2Node_DynamicCast_AsWBP_Assign_Board_Pal_Slot_Button' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_GetWorkerTopButton, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'WBP_AssignBoard_C_GetWorkerTopButton::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.GetWorkListTopButton
// 0x0060 (0x0060 - 0x0000)
struct WBP_AssignBoard_C_GetWorkListTopButton final
{
public:
	class UWidget*                                Widget;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C0B[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UScrollBox*                             CallFunc_GetScrollBox_ScrollBox;                   // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C0C[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C0D[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_AssignBoard_WorkListBase_C*        K2Node_DynamicCast_AsWBP_Assign_Board_Work_List_Base; // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C0E[0x7];                                     // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetFocusTarget_TargetWidget;              // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_C_GetWorkListTopButton) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_GetWorkListTopButton");
static_assert(sizeof(WBP_AssignBoard_C_GetWorkListTopButton) == 0x000060, "Wrong size on WBP_AssignBoard_C_GetWorkListTopButton");
static_assert(offsetof(WBP_AssignBoard_C_GetWorkListTopButton, Widget) == 0x000000, "Member 'WBP_AssignBoard_C_GetWorkListTopButton::Widget' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_GetWorkListTopButton, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_AssignBoard_C_GetWorkListTopButton::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_GetWorkListTopButton, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_AssignBoard_C_GetWorkListTopButton::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_GetWorkListTopButton, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_AssignBoard_C_GetWorkListTopButton::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_GetWorkListTopButton, CallFunc_GetScrollBox_ScrollBox) == 0x000018, "Member 'WBP_AssignBoard_C_GetWorkListTopButton::CallFunc_GetScrollBox_ScrollBox' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_GetWorkListTopButton, CallFunc_GetAllChildren_ReturnValue) == 0x000020, "Member 'WBP_AssignBoard_C_GetWorkListTopButton::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_GetWorkListTopButton, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WBP_AssignBoard_C_GetWorkListTopButton::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_GetWorkListTopButton, CallFunc_Array_Get_Item) == 0x000038, "Member 'WBP_AssignBoard_C_GetWorkListTopButton::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_GetWorkListTopButton, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'WBP_AssignBoard_C_GetWorkListTopButton::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_GetWorkListTopButton, K2Node_DynamicCast_AsWBP_Assign_Board_Work_List_Base) == 0x000048, "Member 'WBP_AssignBoard_C_GetWorkListTopButton::K2Node_DynamicCast_AsWBP_Assign_Board_Work_List_Base' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_GetWorkListTopButton, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_AssignBoard_C_GetWorkListTopButton::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_GetWorkListTopButton, CallFunc_GetFocusTarget_TargetWidget) == 0x000058, "Member 'WBP_AssignBoard_C_GetWorkListTopButton::CallFunc_GetFocusTarget_TargetWidget' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.IsExistWorkListWidget
// 0x0040 (0x0040 - 0x0000)
struct WBP_AssignBoard_C_IsExistWorkListWidget final
{
public:
	class UWBP_AssignBoard_WorkListBase_C*        Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsExist;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C0F[0x6];                                     // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalUIBaseCampWorkFixedAssignInfo      CallFunc_GetAssignInfo_AssignInfo;                 // 0x0010(0x0010)(NoDestructor)
	class UPalWorkBase*                           CallFunc_GetWorkBase_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C10[0x3];                                     // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetWorkId_ReturnValue;                    // 0x002C(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_C_IsExistWorkListWidget) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_IsExistWorkListWidget");
static_assert(sizeof(WBP_AssignBoard_C_IsExistWorkListWidget) == 0x000040, "Wrong size on WBP_AssignBoard_C_IsExistWorkListWidget");
static_assert(offsetof(WBP_AssignBoard_C_IsExistWorkListWidget, Widget) == 0x000000, "Member 'WBP_AssignBoard_C_IsExistWorkListWidget::Widget' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_IsExistWorkListWidget, IsExist) == 0x000008, "Member 'WBP_AssignBoard_C_IsExistWorkListWidget::IsExist' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_IsExistWorkListWidget, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'WBP_AssignBoard_C_IsExistWorkListWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_IsExistWorkListWidget, CallFunc_GetAssignInfo_AssignInfo) == 0x000010, "Member 'WBP_AssignBoard_C_IsExistWorkListWidget::CallFunc_GetAssignInfo_AssignInfo' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_IsExistWorkListWidget, CallFunc_GetWorkBase_ReturnValue) == 0x000020, "Member 'WBP_AssignBoard_C_IsExistWorkListWidget::CallFunc_GetWorkBase_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_IsExistWorkListWidget, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'WBP_AssignBoard_C_IsExistWorkListWidget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_IsExistWorkListWidget, CallFunc_GetWorkId_ReturnValue) == 0x00002C, "Member 'WBP_AssignBoard_C_IsExistWorkListWidget::CallFunc_GetWorkId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_IsExistWorkListWidget, CallFunc_Map_Contains_ReturnValue) == 0x00003C, "Member 'WBP_AssignBoard_C_IsExistWorkListWidget::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.IsSelectiongWorkerMode
// 0x0001 (0x0001 - 0x0000)
struct WBP_AssignBoard_C_IsSelectiongWorkerMode final
{
public:
	bool                                          IsSelecting;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_C_IsSelectiongWorkerMode) == 0x000001, "Wrong alignment on WBP_AssignBoard_C_IsSelectiongWorkerMode");
static_assert(sizeof(WBP_AssignBoard_C_IsSelectiongWorkerMode) == 0x000001, "Wrong size on WBP_AssignBoard_C_IsSelectiongWorkerMode");
static_assert(offsetof(WBP_AssignBoard_C_IsSelectiongWorkerMode, IsSelecting) == 0x000000, "Member 'WBP_AssignBoard_C_IsSelectiongWorkerMode::IsSelecting' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.OnClickedWork__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_AssignBoard_C_OnClickedWork__DelegateSignature final
{
public:
	class UWBP_AssignBoard_WorkListBase_C*        Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_C_OnClickedWork__DelegateSignature) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_OnClickedWork__DelegateSignature");
static_assert(sizeof(WBP_AssignBoard_C_OnClickedWork__DelegateSignature) == 0x000008, "Wrong size on WBP_AssignBoard_C_OnClickedWork__DelegateSignature");
static_assert(offsetof(WBP_AssignBoard_C_OnClickedWork__DelegateSignature, Widget) == 0x000000, "Member 'WBP_AssignBoard_C_OnClickedWork__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.OnClickedWorkerButton_Internal
// 0x0010 (0x0010 - 0x0000)
struct WBP_AssignBoard_C_OnClickedWorkerButton_Internal final
{
public:
	class UWBP_PalCharacterSlotButtonBase_C*      Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EPalItemSlotPressType                         PressType;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_C_OnClickedWorkerButton_Internal) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_OnClickedWorkerButton_Internal");
static_assert(sizeof(WBP_AssignBoard_C_OnClickedWorkerButton_Internal) == 0x000010, "Wrong size on WBP_AssignBoard_C_OnClickedWorkerButton_Internal");
static_assert(offsetof(WBP_AssignBoard_C_OnClickedWorkerButton_Internal, Widget) == 0x000000, "Member 'WBP_AssignBoard_C_OnClickedWorkerButton_Internal::Widget' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_OnClickedWorkerButton_Internal, PressType) == 0x000008, "Member 'WBP_AssignBoard_C_OnClickedWorkerButton_Internal::PressType' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.OnClickedWorkerSlot__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_AssignBoard_C_OnClickedWorkerSlot__DelegateSignature final
{
public:
	class UWBP_PalCharacterSlotButtonBase_C*      SlotButtonBase;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_C_OnClickedWorkerSlot__DelegateSignature) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_OnClickedWorkerSlot__DelegateSignature");
static_assert(sizeof(WBP_AssignBoard_C_OnClickedWorkerSlot__DelegateSignature) == 0x000008, "Wrong size on WBP_AssignBoard_C_OnClickedWorkerSlot__DelegateSignature");
static_assert(offsetof(WBP_AssignBoard_C_OnClickedWorkerSlot__DelegateSignature, SlotButtonBase) == 0x000000, "Member 'WBP_AssignBoard_C_OnClickedWorkerSlot__DelegateSignature::SlotButtonBase' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.OnHoveredWork__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_AssignBoard_C_OnHoveredWork__DelegateSignature final
{
public:
	class UWBP_AssignBoard_WorkListBase_C*        Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_C_OnHoveredWork__DelegateSignature) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_OnHoveredWork__DelegateSignature");
static_assert(sizeof(WBP_AssignBoard_C_OnHoveredWork__DelegateSignature) == 0x000008, "Wrong size on WBP_AssignBoard_C_OnHoveredWork__DelegateSignature");
static_assert(offsetof(WBP_AssignBoard_C_OnHoveredWork__DelegateSignature, Widget) == 0x000000, "Member 'WBP_AssignBoard_C_OnHoveredWork__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.OnHoveredWork_Internal
// 0x0008 (0x0008 - 0x0000)
struct WBP_AssignBoard_C_OnHoveredWork_Internal final
{
public:
	class UWBP_AssignBoard_WorkListBase_C*        Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_C_OnHoveredWork_Internal) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_OnHoveredWork_Internal");
static_assert(sizeof(WBP_AssignBoard_C_OnHoveredWork_Internal) == 0x000008, "Wrong size on WBP_AssignBoard_C_OnHoveredWork_Internal");
static_assert(offsetof(WBP_AssignBoard_C_OnHoveredWork_Internal, Widget) == 0x000000, "Member 'WBP_AssignBoard_C_OnHoveredWork_Internal::Widget' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.OnHoveredWorkerButton_Internal
// 0x0018 (0x0018 - 0x0000)
struct WBP_AssignBoard_C_OnHoveredWorkerButton_Internal final
{
public:
	class UWBP_PalCharacterSlotButtonBase_C*      Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterSlot*            CallFunc_GetTargetSlot_targetSlot;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_C_OnHoveredWorkerButton_Internal) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_OnHoveredWorkerButton_Internal");
static_assert(sizeof(WBP_AssignBoard_C_OnHoveredWorkerButton_Internal) == 0x000018, "Wrong size on WBP_AssignBoard_C_OnHoveredWorkerButton_Internal");
static_assert(offsetof(WBP_AssignBoard_C_OnHoveredWorkerButton_Internal, Widget) == 0x000000, "Member 'WBP_AssignBoard_C_OnHoveredWorkerButton_Internal::Widget' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_OnHoveredWorkerButton_Internal, CallFunc_GetTargetSlot_targetSlot) == 0x000008, "Member 'WBP_AssignBoard_C_OnHoveredWorkerButton_Internal::CallFunc_GetTargetSlot_targetSlot' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_OnHoveredWorkerButton_Internal, CallFunc_IsEmpty_ReturnValue) == 0x000010, "Member 'WBP_AssignBoard_C_OnHoveredWorkerButton_Internal::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_OnHoveredWorkerButton_Internal, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'WBP_AssignBoard_C_OnHoveredWorkerButton_Internal::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.OnSelectedWork_Internal
// 0x0008 (0x0008 - 0x0000)
struct WBP_AssignBoard_C_OnSelectedWork_Internal final
{
public:
	class UWBP_AssignBoard_WorkListBase_C*        Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_C_OnSelectedWork_Internal) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_OnSelectedWork_Internal");
static_assert(sizeof(WBP_AssignBoard_C_OnSelectedWork_Internal) == 0x000008, "Wrong size on WBP_AssignBoard_C_OnSelectedWork_Internal");
static_assert(offsetof(WBP_AssignBoard_C_OnSelectedWork_Internal, Widget) == 0x000000, "Member 'WBP_AssignBoard_C_OnSelectedWork_Internal::Widget' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.OnUnhoveredWork__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_AssignBoard_C_OnUnhoveredWork__DelegateSignature final
{
public:
	class UWBP_AssignBoard_WorkListBase_C*        Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_C_OnUnhoveredWork__DelegateSignature) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_OnUnhoveredWork__DelegateSignature");
static_assert(sizeof(WBP_AssignBoard_C_OnUnhoveredWork__DelegateSignature) == 0x000008, "Wrong size on WBP_AssignBoard_C_OnUnhoveredWork__DelegateSignature");
static_assert(offsetof(WBP_AssignBoard_C_OnUnhoveredWork__DelegateSignature, Widget) == 0x000000, "Member 'WBP_AssignBoard_C_OnUnhoveredWork__DelegateSignature::Widget' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.OnUnhoveredWork_Internal
// 0x0008 (0x0008 - 0x0000)
struct WBP_AssignBoard_C_OnUnhoveredWork_Internal final
{
public:
	class UWBP_AssignBoard_WorkListBase_C*        Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_C_OnUnhoveredWork_Internal) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_OnUnhoveredWork_Internal");
static_assert(sizeof(WBP_AssignBoard_C_OnUnhoveredWork_Internal) == 0x000008, "Wrong size on WBP_AssignBoard_C_OnUnhoveredWork_Internal");
static_assert(offsetof(WBP_AssignBoard_C_OnUnhoveredWork_Internal, Widget) == 0x000000, "Member 'WBP_AssignBoard_C_OnUnhoveredWork_Internal::Widget' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.OnUnhoveredWorkerButton_Internal
// 0x0008 (0x0008 - 0x0000)
struct WBP_AssignBoard_C_OnUnhoveredWorkerButton_Internal final
{
public:
	class UWBP_PalCharacterSlotButtonBase_C*      Widget;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_C_OnUnhoveredWorkerButton_Internal) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_OnUnhoveredWorkerButton_Internal");
static_assert(sizeof(WBP_AssignBoard_C_OnUnhoveredWorkerButton_Internal) == 0x000008, "Wrong size on WBP_AssignBoard_C_OnUnhoveredWorkerButton_Internal");
static_assert(offsetof(WBP_AssignBoard_C_OnUnhoveredWorkerButton_Internal, Widget) == 0x000000, "Member 'WBP_AssignBoard_C_OnUnhoveredWorkerButton_Internal::Widget' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.OnUpdateAssignInfo
// 0x0028 (0x0028 - 0x0000)
struct WBP_AssignBoard_C_OnUpdateAssignInfo final
{
public:
	class UPalUIBaseCampWorkFixedAssignManageModel* Model;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetWorkListTopButton_Widget;              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FPalUIBaseCampWorkFixedAssignInfo> CallFunc_GetFixedAssignableWorks_OutWorks;         // 0x0010(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_C_OnUpdateAssignInfo) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_OnUpdateAssignInfo");
static_assert(sizeof(WBP_AssignBoard_C_OnUpdateAssignInfo) == 0x000028, "Wrong size on WBP_AssignBoard_C_OnUpdateAssignInfo");
static_assert(offsetof(WBP_AssignBoard_C_OnUpdateAssignInfo, Model) == 0x000000, "Member 'WBP_AssignBoard_C_OnUpdateAssignInfo::Model' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_OnUpdateAssignInfo, CallFunc_GetWorkListTopButton_Widget) == 0x000008, "Member 'WBP_AssignBoard_C_OnUpdateAssignInfo::CallFunc_GetWorkListTopButton_Widget' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_OnUpdateAssignInfo, CallFunc_GetFixedAssignableWorks_OutWorks) == 0x000010, "Member 'WBP_AssignBoard_C_OnUpdateAssignInfo::CallFunc_GetFixedAssignableWorks_OutWorks' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_OnUpdateAssignInfo, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'WBP_AssignBoard_C_OnUpdateAssignInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.OnUpdateWorkerSlots_Internal
// 0x0130 (0x0130 - 0x0000)
struct WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal final
{
public:
	class UPalIndividualCharacterContainer*       Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         ValidSlotNum;                                      // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPalIndividualCharacterSlot*>    CallFunc_GetSlots_ReturnValue;                     // 0x0010(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C11[0x3];                                     // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C12[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C13[0x4];                                     // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0050)(HasGetValueTypeHash)
	class UPalIndividualCharacterSlot*            CallFunc_Array_Get_Item;                           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C14[0x7];                                     // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00B0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0100(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C15[0x4];                                     // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0118(0x0018)()
};
static_assert(alignof(WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal");
static_assert(sizeof(WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal) == 0x000130, "Wrong size on WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal");
static_assert(offsetof(WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal, Container) == 0x000000, "Member 'WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal::Container' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal, ValidSlotNum) == 0x000008, "Member 'WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal::ValidSlotNum' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal, Temp_int_Variable) == 0x00000C, "Member 'WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal, CallFunc_GetSlots_ReturnValue) == 0x000010, "Member 'WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal::CallFunc_GetSlots_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal, CallFunc_Array_Length_ReturnValue_1) == 0x000030, "Member 'WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000038, "Member 'WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal, Temp_int_Array_Index_Variable) == 0x000040, "Member 'WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal, CallFunc_Array_Get_Item) == 0x000098, "Member 'WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal, CallFunc_IsEmpty_ReturnValue) == 0x0000A0, "Member 'WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x0000A8, "Member 'WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000B0, "Member 'WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal, K2Node_MakeArray_Array) == 0x000100, "Member 'WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal, CallFunc_Add_IntInt_ReturnValue_1) == 0x000110, "Member 'WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal, CallFunc_Format_ReturnValue) == 0x000118, "Member 'WBP_AssignBoard_C_OnUpdateWorkerSlots_Internal::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.RegisterAction_RemoveAssignShortcut
// 0x0014 (0x0014 - 0x0000)
struct WBP_AssignBoard_C_RegisterAction_RemoveAssignShortcut final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPalUIActionBindData                   CallFunc_RegisterActionBinding_ReturnValue;        // 0x0010(0x0004)(NoDestructor)
};
static_assert(alignof(WBP_AssignBoard_C_RegisterAction_RemoveAssignShortcut) == 0x000004, "Wrong alignment on WBP_AssignBoard_C_RegisterAction_RemoveAssignShortcut");
static_assert(sizeof(WBP_AssignBoard_C_RegisterAction_RemoveAssignShortcut) == 0x000014, "Wrong size on WBP_AssignBoard_C_RegisterAction_RemoveAssignShortcut");
static_assert(offsetof(WBP_AssignBoard_C_RegisterAction_RemoveAssignShortcut, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_AssignBoard_C_RegisterAction_RemoveAssignShortcut::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_RegisterAction_RemoveAssignShortcut, CallFunc_RegisterActionBinding_ReturnValue) == 0x000010, "Member 'WBP_AssignBoard_C_RegisterAction_RemoveAssignShortcut::CallFunc_RegisterActionBinding_ReturnValue' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.ResetWorkerContainerEvent
// 0x0030 (0x0030 - 0x0000)
struct WBP_AssignBoard_C_ResetWorkerContainerEvent final
{
public:
	TDelegate<void(class UPalIndividualCharacterContainer* Container)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C16[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPalIndividualCharacterContainer*       K2Node_DynamicCast_AsPal_Individual_Character_Container; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_C_ResetWorkerContainerEvent) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_ResetWorkerContainerEvent");
static_assert(sizeof(WBP_AssignBoard_C_ResetWorkerContainerEvent) == 0x000030, "Wrong size on WBP_AssignBoard_C_ResetWorkerContainerEvent");
static_assert(offsetof(WBP_AssignBoard_C_ResetWorkerContainerEvent, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'WBP_AssignBoard_C_ResetWorkerContainerEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ResetWorkerContainerEvent, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000010, "Member 'WBP_AssignBoard_C_ResetWorkerContainerEvent::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ResetWorkerContainerEvent, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000018, "Member 'WBP_AssignBoard_C_ResetWorkerContainerEvent::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ResetWorkerContainerEvent, K2Node_DynamicCast_AsPal_Individual_Character_Container) == 0x000020, "Member 'WBP_AssignBoard_C_ResetWorkerContainerEvent::K2Node_DynamicCast_AsPal_Individual_Character_Container' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_ResetWorkerContainerEvent, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WBP_AssignBoard_C_ResetWorkerContainerEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.Set Sort Name
// 0x0018 (0x0018 - 0x0000)
struct WBP_AssignBoard_C_Set_Sort_Name final
{
public:
	class FText                                   SortNameText;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_AssignBoard_C_Set_Sort_Name) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_Set_Sort_Name");
static_assert(sizeof(WBP_AssignBoard_C_Set_Sort_Name) == 0x000018, "Wrong size on WBP_AssignBoard_C_Set_Sort_Name");
static_assert(offsetof(WBP_AssignBoard_C_Set_Sort_Name, SortNameText) == 0x000000, "Member 'WBP_AssignBoard_C_Set_Sort_Name::SortNameText' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.SetAssignInfo
// 0x01A8 (0x01A8 - 0x0000)
struct WBP_AssignBoard_C_SetAssignInfo final
{
public:
	TArray<struct FPalUIBaseCampWorkFixedAssignInfo> AssignInfo;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ForceRefresh;                                      // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C17[0x7];                                     // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGuid>                          RemoveWorkId;                                      // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<struct FGuid>                          AllWorkId;                                         // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C18[0x3];                                     // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C19[0x3];                                     // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C1A[0x4];                                     // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UScrollBox*                             CallFunc_GetScrollBox_ScrollBox;                   // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FPalUIBaseCampWorkFixedAssignInfo      CallFunc_Array_Get_Item;                           // 0x0078(0x0010)(NoDestructor)
	class UPalWorkBase*                           CallFunc_GetWorkBase_ReturnValue;                  // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_AssignBoard_WorkListBase_C*        CallFunc_CreateWorkListWidget_CreatedWidget;       // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C1B[0x7];                                     // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C1C[0x3];                                     // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetWorkId_ReturnValue;                    // 0x00AC(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C1D[0x2];                                     // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C1E[0x3];                                     // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_Array_Get_Item_1;                         // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C1F[0x7];                                     // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_AssignBoard_WorkListBase_C*        CallFunc_Map_Find_Value;                           // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C20[0x7];                                     // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalUIBaseCampWorkFixedAssignInfo      CallFunc_Array_Get_Item_2;                         // 0x00F8(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C21[0x4];                                     // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPalWorkBase*                           CallFunc_GetWorkBase_ReturnValue_1;                // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C22[0x2];                                     // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGuid                                  CallFunc_GetWorkId_ReturnValue_1;                  // 0x011C(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C23[0x7];                                     // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UScrollBox*                             CallFunc_GetScrollBox_ScrollBox_1;                 // 0x0138(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C24[0x7];                                     // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalUIBaseCampWorkFixedAssignInfo      CallFunc_Array_Get_Item_3;                         // 0x0148(0x0010)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C25[0x4];                                     // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_AssignBoard_WorkListBase_C*        CallFunc_CreateWorkListWidget_CreatedWidget_1;     // 0x0160(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C26[0x7];                                     // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue_1;                   // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPalWorkBase*                           CallFunc_GetWorkBase_ReturnValue_2;                // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetWorkId_ReturnValue_2;                  // 0x0180(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C27[0x5];                                     // 0x0193(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_AssignBoard_WorkListBase_C*        CallFunc_Map_Find_Value_1;                         // 0x0198(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_C_SetAssignInfo) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_SetAssignInfo");
static_assert(sizeof(WBP_AssignBoard_C_SetAssignInfo) == 0x0001A8, "Wrong size on WBP_AssignBoard_C_SetAssignInfo");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, AssignInfo) == 0x000000, "Member 'WBP_AssignBoard_C_SetAssignInfo::AssignInfo' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, ForceRefresh) == 0x000010, "Member 'WBP_AssignBoard_C_SetAssignInfo::ForceRefresh' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, RemoveWorkId) == 0x000018, "Member 'WBP_AssignBoard_C_SetAssignInfo::RemoveWorkId' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, AllWorkId) == 0x000028, "Member 'WBP_AssignBoard_C_SetAssignInfo::AllWorkId' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, Temp_int_Loop_Counter_Variable) == 0x000038, "Member 'WBP_AssignBoard_C_SetAssignInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_Array_IsEmpty_ReturnValue) == 0x000040, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, Temp_int_Loop_Counter_Variable_1) == 0x000044, "Member 'WBP_AssignBoard_C_SetAssignInfo::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, Temp_bool_Variable) == 0x000048, "Member 'WBP_AssignBoard_C_SetAssignInfo::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, Temp_int_Loop_Counter_Variable_2) == 0x000050, "Member 'WBP_AssignBoard_C_SetAssignInfo::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_Add_IntInt_ReturnValue_2) == 0x000054, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, Temp_int_Array_Index_Variable) == 0x000058, "Member 'WBP_AssignBoard_C_SetAssignInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, Temp_int_Array_Index_Variable_1) == 0x00005C, "Member 'WBP_AssignBoard_C_SetAssignInfo::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, Temp_int_Loop_Counter_Variable_3) == 0x000060, "Member 'WBP_AssignBoard_C_SetAssignInfo::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_Add_IntInt_ReturnValue_3) == 0x000064, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, Temp_int_Array_Index_Variable_2) == 0x000068, "Member 'WBP_AssignBoard_C_SetAssignInfo::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_GetScrollBox_ScrollBox) == 0x000070, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_GetScrollBox_ScrollBox' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_Array_Get_Item) == 0x000078, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_GetWorkBase_ReturnValue) == 0x000088, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_GetWorkBase_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_CreateWorkListWidget_CreatedWidget) == 0x000090, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_CreateWorkListWidget_CreatedWidget' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_AddChild_ReturnValue) == 0x0000A0, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_IsValid_ReturnValue_1) == 0x0000A8, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_GetWorkId_ReturnValue) == 0x0000AC, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_GetWorkId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_Array_Length_ReturnValue) == 0x0000BC, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, Temp_byte_Variable) == 0x0000C1, "Member 'WBP_AssignBoard_C_SetAssignInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_Array_Length_ReturnValue_1) == 0x0000C4, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, Temp_int_Array_Index_Variable_3) == 0x0000C8, "Member 'WBP_AssignBoard_C_SetAssignInfo::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000CC, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_Array_Get_Item_1) == 0x0000D0, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_Map_Remove_ReturnValue) == 0x0000E0, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_Map_Find_Value) == 0x0000E8, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_Map_Find_ReturnValue) == 0x0000F0, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_Array_Get_Item_2) == 0x0000F8, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_Array_Length_ReturnValue_2) == 0x000108, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_GetWorkBase_ReturnValue_1) == 0x000110, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_GetWorkBase_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_Less_IntInt_ReturnValue_2) == 0x000118, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_IsValid_ReturnValue_2) == 0x000119, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_GetWorkId_ReturnValue_1) == 0x00011C, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_GetWorkId_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_Array_Add_ReturnValue) == 0x00012C, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, Temp_byte_Variable_1) == 0x000130, "Member 'WBP_AssignBoard_C_SetAssignInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_GetScrollBox_ScrollBox_1) == 0x000138, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_GetScrollBox_ScrollBox_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, K2Node_Select_Default) == 0x000140, "Member 'WBP_AssignBoard_C_SetAssignInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_Array_Get_Item_3) == 0x000148, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_Array_Length_ReturnValue_3) == 0x000158, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_CreateWorkListWidget_CreatedWidget_1) == 0x000160, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_CreateWorkListWidget_CreatedWidget_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_Less_IntInt_ReturnValue_3) == 0x000168, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_AddChild_ReturnValue_1) == 0x000170, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_AddChild_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_GetWorkBase_ReturnValue_2) == 0x000178, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_GetWorkBase_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_GetWorkId_ReturnValue_2) == 0x000180, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_GetWorkId_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_IsValid_ReturnValue_3) == 0x000190, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_Array_RemoveItem_ReturnValue) == 0x000191, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x000192, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_Map_Find_Value_1) == 0x000198, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetAssignInfo, CallFunc_Map_Find_ReturnValue_1) == 0x0001A0, "Member 'WBP_AssignBoard_C_SetAssignInfo::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.SetupWorkerContainerEvent
// 0x0050 (0x0050 - 0x0000)
struct WBP_AssignBoard_C_SetupWorkerContainerEvent final
{
public:
	class UPalIndividualCharacterContainer*       Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPalIndividualCharacterContainer* Container)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UPalIndividualCharacterContainer> CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0018(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_C_SetupWorkerContainerEvent) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_SetupWorkerContainerEvent");
static_assert(sizeof(WBP_AssignBoard_C_SetupWorkerContainerEvent) == 0x000050, "Wrong size on WBP_AssignBoard_C_SetupWorkerContainerEvent");
static_assert(offsetof(WBP_AssignBoard_C_SetupWorkerContainerEvent, Container) == 0x000000, "Member 'WBP_AssignBoard_C_SetupWorkerContainerEvent::Container' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetupWorkerContainerEvent, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_AssignBoard_C_SetupWorkerContainerEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetupWorkerContainerEvent, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000018, "Member 'WBP_AssignBoard_C_SetupWorkerContainerEvent::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_SetupWorkerContainerEvent, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'WBP_AssignBoard_C_SetupWorkerContainerEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.SetWorkerCharacterContainer
// 0x0008 (0x0008 - 0x0000)
struct WBP_AssignBoard_C_SetWorkerCharacterContainer final
{
public:
	class UPalIndividualCharacterContainer*       Container;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_C_SetWorkerCharacterContainer) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_SetWorkerCharacterContainer");
static_assert(sizeof(WBP_AssignBoard_C_SetWorkerCharacterContainer) == 0x000008, "Wrong size on WBP_AssignBoard_C_SetWorkerCharacterContainer");
static_assert(offsetof(WBP_AssignBoard_C_SetWorkerCharacterContainer, Container) == 0x000000, "Member 'WBP_AssignBoard_C_SetWorkerCharacterContainer::Container' has a wrong offset!");

// Function WBP_AssignBoard.WBP_AssignBoard_C.StartSelectWorker
// 0x0080 (0x0080 - 0x0000)
struct WBP_AssignBoard_C_StartSelectWorker final
{
public:
	class UWBP_AssignBoard_WorkListBase_C*        TargetWorkWIdget;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C28[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalUIBaseCampWorkFixedAssignInfo      CallFunc_GetAssignInfo_AssignInfo;                 // 0x0018(0x0010)(NoDestructor)
	TArray<class UWidget*>                        CallFunc_Get_All_Children_widgets;                 // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UPalWorkBase*                           CallFunc_GetWorkBase_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FGuid                                  CallFunc_GetWorkId_ReturnValue;                    // 0x0048(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_AssignBoard_PalSlotButton_C*       K2Node_DynamicCast_AsWBP_Assign_Board_Pal_Slot_Button; // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C29[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C2A[0x7];                                     // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EPalWorkSuitability>                   CallFunc_GetWorkSuitability_ReturnValue;           // 0x0070(0x0010)(ReferenceParm)
};
static_assert(alignof(WBP_AssignBoard_C_StartSelectWorker) == 0x000008, "Wrong alignment on WBP_AssignBoard_C_StartSelectWorker");
static_assert(sizeof(WBP_AssignBoard_C_StartSelectWorker) == 0x000080, "Wrong size on WBP_AssignBoard_C_StartSelectWorker");
static_assert(offsetof(WBP_AssignBoard_C_StartSelectWorker, TargetWorkWIdget) == 0x000000, "Member 'WBP_AssignBoard_C_StartSelectWorker::TargetWorkWIdget' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_StartSelectWorker, Temp_int_Array_Index_Variable) == 0x000008, "Member 'WBP_AssignBoard_C_StartSelectWorker::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_StartSelectWorker, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'WBP_AssignBoard_C_StartSelectWorker::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_StartSelectWorker, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'WBP_AssignBoard_C_StartSelectWorker::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_StartSelectWorker, CallFunc_GetAssignInfo_AssignInfo) == 0x000018, "Member 'WBP_AssignBoard_C_StartSelectWorker::CallFunc_GetAssignInfo_AssignInfo' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_StartSelectWorker, CallFunc_Get_All_Children_widgets) == 0x000028, "Member 'WBP_AssignBoard_C_StartSelectWorker::CallFunc_Get_All_Children_widgets' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_StartSelectWorker, CallFunc_GetWorkBase_ReturnValue) == 0x000038, "Member 'WBP_AssignBoard_C_StartSelectWorker::CallFunc_GetWorkBase_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_StartSelectWorker, CallFunc_Array_Get_Item) == 0x000040, "Member 'WBP_AssignBoard_C_StartSelectWorker::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_StartSelectWorker, CallFunc_GetWorkId_ReturnValue) == 0x000048, "Member 'WBP_AssignBoard_C_StartSelectWorker::CallFunc_GetWorkId_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_StartSelectWorker, K2Node_DynamicCast_AsWBP_Assign_Board_Pal_Slot_Button) == 0x000058, "Member 'WBP_AssignBoard_C_StartSelectWorker::K2Node_DynamicCast_AsWBP_Assign_Board_Pal_Slot_Button' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_StartSelectWorker, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'WBP_AssignBoard_C_StartSelectWorker::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_StartSelectWorker, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'WBP_AssignBoard_C_StartSelectWorker::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_StartSelectWorker, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'WBP_AssignBoard_C_StartSelectWorker::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_C_StartSelectWorker, CallFunc_GetWorkSuitability_ReturnValue) == 0x000070, "Member 'WBP_AssignBoard_C_StartSelectWorker::CallFunc_GetWorkSuitability_ReturnValue' has a wrong offset!");

}

