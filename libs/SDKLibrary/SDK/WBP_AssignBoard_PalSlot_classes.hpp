#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AssignBoard_PalSlot

#include "Basic.hpp"

#include "Pal_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "WBP_PalCharacterSlotBase_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_AssignBoard_PalSlot.WBP_AssignBoard_PalSlot_C
// 0x0050 (0x0598 - 0x0548)
class UWBP_AssignBoard_PalSlot_C final : public UWBP_PalCharacterSlotBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WBP_AssignBoard_PalSlot_C;          // 0x0548(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_Check;                                       // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_FocusedFrame;                                // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_PalDying;                                    // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_FixedAssign;                               // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_GenderIcon;                                // 0x0570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalCommonCharacterIcon_C*          WBP_PalCommonCharacterIcon;                        // 0x0578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalGenderIcon_C*                   WBP_PalGenderIcon;                                 // 0x0580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FGuid                                  ReferemceWorkId;                                   // 0x0588(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_AssignBoard_PalSlot(int32 EntryPoint);
	void OnInitialized();
	void OnSetEmpty_Binded();
	void OnSetValidSlot_Binded();
	void OnUpdateHP_Binded(int64 NowHP, int64 NowMaxHP);
	void OnUpdateWorkId_Binded(const struct FGuid& WorkId, bool IsFixedAssign);
	void RegisterCharacterIconWidget(class UWBP_PalCharacterIconBase_C** IconWidget);
	void SetReferenceWorkId(const struct FGuid& WorkId);
	void SetVisibilityCheck(ESlateVisibility NewVisibility);
	void SetVisibilityFixedAssignFrame(ESlateVisibility NewVisibility);
	void SetVisibilityFocusFrame(ESlateVisibility NewVisibility);
	void SetVisibilityGenderIcon(ESlateVisibility NewVisibility);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_AssignBoard_PalSlot_C">();
	}
	static class UWBP_AssignBoard_PalSlot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_AssignBoard_PalSlot_C>();
	}
};
static_assert(alignof(UWBP_AssignBoard_PalSlot_C) == 0x000008, "Wrong alignment on UWBP_AssignBoard_PalSlot_C");
static_assert(sizeof(UWBP_AssignBoard_PalSlot_C) == 0x000598, "Wrong size on UWBP_AssignBoard_PalSlot_C");
static_assert(offsetof(UWBP_AssignBoard_PalSlot_C, UberGraphFrame_WBP_AssignBoard_PalSlot_C) == 0x000548, "Member 'UWBP_AssignBoard_PalSlot_C::UberGraphFrame_WBP_AssignBoard_PalSlot_C' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_PalSlot_C, Image_Check) == 0x000550, "Member 'UWBP_AssignBoard_PalSlot_C::Image_Check' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_PalSlot_C, Image_FocusedFrame) == 0x000558, "Member 'UWBP_AssignBoard_PalSlot_C::Image_FocusedFrame' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_PalSlot_C, Image_PalDying) == 0x000560, "Member 'UWBP_AssignBoard_PalSlot_C::Image_PalDying' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_PalSlot_C, Overlay_FixedAssign) == 0x000568, "Member 'UWBP_AssignBoard_PalSlot_C::Overlay_FixedAssign' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_PalSlot_C, Overlay_GenderIcon) == 0x000570, "Member 'UWBP_AssignBoard_PalSlot_C::Overlay_GenderIcon' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_PalSlot_C, WBP_PalCommonCharacterIcon) == 0x000578, "Member 'UWBP_AssignBoard_PalSlot_C::WBP_PalCommonCharacterIcon' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_PalSlot_C, WBP_PalGenderIcon) == 0x000580, "Member 'UWBP_AssignBoard_PalSlot_C::WBP_PalGenderIcon' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_PalSlot_C, ReferemceWorkId) == 0x000588, "Member 'UWBP_AssignBoard_PalSlot_C::ReferemceWorkId' has a wrong offset!");

}

