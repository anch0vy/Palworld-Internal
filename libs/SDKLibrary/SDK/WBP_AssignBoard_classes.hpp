#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AssignBoard

#include "Basic.hpp"

#include "Pal_structs.hpp"
#include "Pal_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_AssignBoard.WBP_AssignBoard_C
// 0x0208 (0x0610 - 0x0408)
class UWBP_AssignBoard_C final : public UPalUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0408(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCanvasPanel*                           Canvas_RemoveGuide;                                // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_SortButton;                                 // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_860;                                         // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Base_Pal_Select;                             // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Base_WorkList_Select;                        // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Frame_Pal;                                   // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Frame_Pal_Select;                            // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Frame_WorkList;                              // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Frame_WorkList_Select;                       // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_SortIcon;                                    // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TabIconBase;                                       // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_SortType;                                     // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBP_PalTextBlock_C*                     Text_WorkerNum;                                    // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_IngameMenu_PalBox_PalDetail_C*     WBP_IngameMenu_PalBox_PalDetail;                   // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Menu_btn_C*                        WBP_Menu_btn;                                      // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_NoData_C*                          WBP_NoData;                                        // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalCharacterScrollList_C*          WBP_PalCharacterScrollList_Worker;                 // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalCommonScrollList_C*             WBP_PalCommonScrollList_WorkList;                  // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalInvisibleButton_C*              WBP_PalInvisibleButton_Sort;                       // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PalKeyGuideIcon_C*                 WBP_PalKeyGuideIcon;                               // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UPalIndividualCharacterContainer> SoftWorkerCharacterContainer;                      // 0x04B0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnClickedWorkerSlot;                               // 0x04E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsSelectingWorker;                                 // 0x04F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BF7[0x7];                                     // 0x04F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnClickedWork;                                     // 0x04F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMap<EPalWorkType, class UClass*>             WorkTypeWidgetMap;                                 // 0x0508(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UWBP_AssignBoard_WorkListBase_C*        SelectedWorkWidget;                                // 0x0558(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FPalUIActionBindData                   RemoveAssignActionHandle;                          // 0x0560(0x0004)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	uint8                                         Pad_4BF8[0x4];                                     // 0x0564(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnTriggerRemoveAssignShortcut;                     // 0x0568(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FPalDataTableRowName_UIInputAction     RemoveAssignInputAction;                           // 0x0578(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnHoveredWork;                                     // 0x0580(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnUnhoveredWork;                                   // 0x0590(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMap<struct FGuid, class UWBP_AssignBoard_WorkListBase_C*> WorkListWidgetMap;                                 // 0x05A0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	FMulticastInlineDelegateProperty_             OnClickedSortButton;                               // 0x05F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnClickedCloseButton;                              // 0x0600(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void AnmEvent_SelectWork(class UWBP_AssignBoard_WorkListBase_C* SelectWidget);
	void AnmEvent_UnselectWork();
	void BndEvt__WBP_AssignBoard_WBP_Menu_btn_K2Node_ComponentBoundEvent_6_OnButtonClicked__DelegateSignature();
	void BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_0_OnCreatedSlot__DelegateSignature(class UWBP_PalCharacterSlotButtonBase_C* CreatedSlot);
	void BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_1_OnHoveredSlot__DelegateSignature(class UWBP_PalCharacterSlotButtonBase_C* Widget);
	void BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_2_OnLeftClickedSlot__DelegateSignature(class UWBP_PalCharacterSlotButtonBase_C* Widget, EPalItemSlotPressType PressType);
	void BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_3_OnUnhoveredSlot__DelegateSignature(class UWBP_PalCharacterSlotButtonBase_C* Widget);
	void BndEvt__WBP_AssignBoard_WBP_PalCharacterScrollList_Worker_K2Node_ComponentBoundEvent_4_OnRightClickedSlot__DelegateSignature(class UWBP_PalCharacterSlotButtonBase_C* Widget);
	void BndEvt__WBP_AssignBoard_WBP_PalInvisibleButton_Sort_K2Node_ComponentBoundEvent_5_CommonButtonBaseClicked__DelegateSignature(class UCommonButtonBase* Button);
	void CreateWorkListWidget(const struct FPalUIBaseCampWorkFixedAssignInfo& AssignInfo, class UWBP_AssignBoard_WorkListBase_C** CreatedWidget);
	void Destruct();
	void EndSelectWorker();
	void ExecuteUbergraph_WBP_AssignBoard(int32 EntryPoint);
	void GetWorkerTopButton(class UWidget** Widget);
	void GetWorkListTopButton(class UWidget** Widget);
	void IsExistWorkListWidget(class UWBP_AssignBoard_WorkListBase_C* Widget, bool* IsExist);
	void IsSelectiongWorkerMode(bool* IsSelecting);
	void OnClickedCloseButton__DelegateSignature();
	void OnClickedSortButton__DelegateSignature();
	void OnClickedWork__DelegateSignature(class UWBP_AssignBoard_WorkListBase_C* Widget);
	void OnClickedWorkerButton_Internal(class UWBP_PalCharacterSlotButtonBase_C* Widget, EPalItemSlotPressType PressType);
	void OnClickedWorkerSlot__DelegateSignature(class UWBP_PalCharacterSlotButtonBase_C* SlotButtonBase);
	void OnHoveredWork__DelegateSignature(class UWBP_AssignBoard_WorkListBase_C* Widget);
	void OnHoveredWork_Internal(class UWBP_AssignBoard_WorkListBase_C* Widget);
	void OnHoveredWorkerButton_Internal(class UWBP_PalCharacterSlotButtonBase_C* Widget);
	void OnSelectedWork_Internal(class UWBP_AssignBoard_WorkListBase_C* Widget);
	void OnTriggerRemoveAssignShortcut__DelegateSignature();
	void OnTriggerRemoveAssignShortcut_Internal();
	void OnUnhoveredWork__DelegateSignature(class UWBP_AssignBoard_WorkListBase_C* Widget);
	void OnUnhoveredWork_Internal(class UWBP_AssignBoard_WorkListBase_C* Widget);
	void OnUnhoveredWorkerButton_Internal(class UWBP_PalCharacterSlotButtonBase_C* Widget);
	void OnUpdateAssignInfo(class UPalUIBaseCampWorkFixedAssignManageModel* Model);
	void OnUpdateWorkerSlots_Internal(class UPalIndividualCharacterContainer* Container);
	void RegisterAction_RemoveAssignShortcut();
	void ResetWorkerContainerEvent();
	void Set_Sort_Name(const class FText& SortNameText);
	void SetAssignInfo(TArray<struct FPalUIBaseCampWorkFixedAssignInfo>& AssignInfo, bool ForceRefresh);
	void Setup();
	void SetupWorkerContainerEvent(class UPalIndividualCharacterContainer* Container);
	void SetWorkerCharacterContainer(class UPalIndividualCharacterContainer* Container);
	void StartSelectWorker(class UWBP_AssignBoard_WorkListBase_C* TargetWorkWIdget);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_AssignBoard_C">();
	}
	static class UWBP_AssignBoard_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_AssignBoard_C>();
	}
};
static_assert(alignof(UWBP_AssignBoard_C) == 0x000008, "Wrong alignment on UWBP_AssignBoard_C");
static_assert(sizeof(UWBP_AssignBoard_C) == 0x000610, "Wrong size on UWBP_AssignBoard_C");
static_assert(offsetof(UWBP_AssignBoard_C, UberGraphFrame) == 0x000408, "Member 'UWBP_AssignBoard_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, Canvas_RemoveGuide) == 0x000410, "Member 'UWBP_AssignBoard_C::Canvas_RemoveGuide' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, Canvas_SortButton) == 0x000418, "Member 'UWBP_AssignBoard_C::Canvas_SortButton' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, Image_860) == 0x000420, "Member 'UWBP_AssignBoard_C::Image_860' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, Image_Base_Pal_Select) == 0x000428, "Member 'UWBP_AssignBoard_C::Image_Base_Pal_Select' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, Image_Base_WorkList_Select) == 0x000430, "Member 'UWBP_AssignBoard_C::Image_Base_WorkList_Select' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, Image_Frame_Pal) == 0x000438, "Member 'UWBP_AssignBoard_C::Image_Frame_Pal' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, Image_Frame_Pal_Select) == 0x000440, "Member 'UWBP_AssignBoard_C::Image_Frame_Pal_Select' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, Image_Frame_WorkList) == 0x000448, "Member 'UWBP_AssignBoard_C::Image_Frame_WorkList' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, Image_Frame_WorkList_Select) == 0x000450, "Member 'UWBP_AssignBoard_C::Image_Frame_WorkList_Select' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, Image_SortIcon) == 0x000458, "Member 'UWBP_AssignBoard_C::Image_SortIcon' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, TabIconBase) == 0x000460, "Member 'UWBP_AssignBoard_C::TabIconBase' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, Text_SortType) == 0x000468, "Member 'UWBP_AssignBoard_C::Text_SortType' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, Text_WorkerNum) == 0x000470, "Member 'UWBP_AssignBoard_C::Text_WorkerNum' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, WBP_IngameMenu_PalBox_PalDetail) == 0x000478, "Member 'UWBP_AssignBoard_C::WBP_IngameMenu_PalBox_PalDetail' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, WBP_Menu_btn) == 0x000480, "Member 'UWBP_AssignBoard_C::WBP_Menu_btn' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, WBP_NoData) == 0x000488, "Member 'UWBP_AssignBoard_C::WBP_NoData' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, WBP_PalCharacterScrollList_Worker) == 0x000490, "Member 'UWBP_AssignBoard_C::WBP_PalCharacterScrollList_Worker' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, WBP_PalCommonScrollList_WorkList) == 0x000498, "Member 'UWBP_AssignBoard_C::WBP_PalCommonScrollList_WorkList' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, WBP_PalInvisibleButton_Sort) == 0x0004A0, "Member 'UWBP_AssignBoard_C::WBP_PalInvisibleButton_Sort' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, WBP_PalKeyGuideIcon) == 0x0004A8, "Member 'UWBP_AssignBoard_C::WBP_PalKeyGuideIcon' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, SoftWorkerCharacterContainer) == 0x0004B0, "Member 'UWBP_AssignBoard_C::SoftWorkerCharacterContainer' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, OnClickedWorkerSlot) == 0x0004E0, "Member 'UWBP_AssignBoard_C::OnClickedWorkerSlot' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, IsSelectingWorker) == 0x0004F0, "Member 'UWBP_AssignBoard_C::IsSelectingWorker' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, OnClickedWork) == 0x0004F8, "Member 'UWBP_AssignBoard_C::OnClickedWork' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, WorkTypeWidgetMap) == 0x000508, "Member 'UWBP_AssignBoard_C::WorkTypeWidgetMap' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, SelectedWorkWidget) == 0x000558, "Member 'UWBP_AssignBoard_C::SelectedWorkWidget' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, RemoveAssignActionHandle) == 0x000560, "Member 'UWBP_AssignBoard_C::RemoveAssignActionHandle' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, OnTriggerRemoveAssignShortcut) == 0x000568, "Member 'UWBP_AssignBoard_C::OnTriggerRemoveAssignShortcut' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, RemoveAssignInputAction) == 0x000578, "Member 'UWBP_AssignBoard_C::RemoveAssignInputAction' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, OnHoveredWork) == 0x000580, "Member 'UWBP_AssignBoard_C::OnHoveredWork' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, OnUnhoveredWork) == 0x000590, "Member 'UWBP_AssignBoard_C::OnUnhoveredWork' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, WorkListWidgetMap) == 0x0005A0, "Member 'UWBP_AssignBoard_C::WorkListWidgetMap' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, OnClickedSortButton) == 0x0005F0, "Member 'UWBP_AssignBoard_C::OnClickedSortButton' has a wrong offset!");
static_assert(offsetof(UWBP_AssignBoard_C, OnClickedCloseButton) == 0x000600, "Member 'UWBP_AssignBoard_C::OnClickedCloseButton' has a wrong offset!");

}

