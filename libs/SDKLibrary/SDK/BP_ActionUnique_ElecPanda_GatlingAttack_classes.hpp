#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ActionUnique_ElecPanda_GatlingAttack

#include "Basic.hpp"

#include "BP_ActionUniqueAttackBase_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ActionUnique_ElecPanda_GatlingAttack.BP_ActionUnique_ElecPanda_GatlingAttack_C
// 0x0060 (0x0270 - 0x0210)
class UBP_ActionUnique_ElecPanda_GatlingAttack_C final : public UBP_ActionUniqueAttackBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BP_ActionUnique_ElecPanda_GatlingAttack_C; // 0x0210(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ABP_UniqueRideWeapon_Minigun_C*         Weapon;                                            // 0x0218(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UPalCharacterParameterComponent*        CharaParameterComponent;                           // 0x0220(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ShootingTimer;                                     // 0x0228(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         ShootingDuration;                                  // 0x0230(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAiming;                                          // 0x0234(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6108[0x3];                                     // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                LastDirection;                                     // 0x0238(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            FloatCurve;                                        // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        ImpactTime;                                        // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Impact;                                            // 0x0260(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6109[0x3];                                     // 0x0261(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ElecShootSpeed;                                    // 0x0264(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           StartShootTimer;                                   // 0x0268(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void CheckWeaponState(bool* IsWeaponValid);
	void ElecShoot();
	void ExecuteUbergraph_BP_ActionUnique_ElecPanda_GatlingAttack(int32 EntryPoint);
	void OnBeginAction();
	void OnBlendOut_1B1D39DF4F91178996FE139424596937(class FName NotifyName);
	void OnCompleted_1B1D39DF4F91178996FE139424596937(class FName NotifyName);
	void OnEndAction();
	void OnInterrupted_1B1D39DF4F91178996FE139424596937(class FName NotifyName);
	void OnNotifyBegin_1B1D39DF4F91178996FE139424596937(class FName NotifyName);
	void OnNotifyEnd_1B1D39DF4F91178996FE139424596937(class FName NotifyName);
	void Shooting();
	void ShootSkill_Bullet(const struct FPalWeaponBulletHijackInfo& HijackBulletInfo);
	void StartShort();
	void TickAction(float DeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ActionUnique_ElecPanda_GatlingAttack_C">();
	}
	static class UBP_ActionUnique_ElecPanda_GatlingAttack_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ActionUnique_ElecPanda_GatlingAttack_C>();
	}
};
static_assert(alignof(UBP_ActionUnique_ElecPanda_GatlingAttack_C) == 0x000010, "Wrong alignment on UBP_ActionUnique_ElecPanda_GatlingAttack_C");
static_assert(sizeof(UBP_ActionUnique_ElecPanda_GatlingAttack_C) == 0x000270, "Wrong size on UBP_ActionUnique_ElecPanda_GatlingAttack_C");
static_assert(offsetof(UBP_ActionUnique_ElecPanda_GatlingAttack_C, UberGraphFrame_BP_ActionUnique_ElecPanda_GatlingAttack_C) == 0x000210, "Member 'UBP_ActionUnique_ElecPanda_GatlingAttack_C::UberGraphFrame_BP_ActionUnique_ElecPanda_GatlingAttack_C' has a wrong offset!");
static_assert(offsetof(UBP_ActionUnique_ElecPanda_GatlingAttack_C, Weapon) == 0x000218, "Member 'UBP_ActionUnique_ElecPanda_GatlingAttack_C::Weapon' has a wrong offset!");
static_assert(offsetof(UBP_ActionUnique_ElecPanda_GatlingAttack_C, CharaParameterComponent) == 0x000220, "Member 'UBP_ActionUnique_ElecPanda_GatlingAttack_C::CharaParameterComponent' has a wrong offset!");
static_assert(offsetof(UBP_ActionUnique_ElecPanda_GatlingAttack_C, ShootingTimer) == 0x000228, "Member 'UBP_ActionUnique_ElecPanda_GatlingAttack_C::ShootingTimer' has a wrong offset!");
static_assert(offsetof(UBP_ActionUnique_ElecPanda_GatlingAttack_C, ShootingDuration) == 0x000230, "Member 'UBP_ActionUnique_ElecPanda_GatlingAttack_C::ShootingDuration' has a wrong offset!");
static_assert(offsetof(UBP_ActionUnique_ElecPanda_GatlingAttack_C, IsAiming) == 0x000234, "Member 'UBP_ActionUnique_ElecPanda_GatlingAttack_C::IsAiming' has a wrong offset!");
static_assert(offsetof(UBP_ActionUnique_ElecPanda_GatlingAttack_C, LastDirection) == 0x000238, "Member 'UBP_ActionUnique_ElecPanda_GatlingAttack_C::LastDirection' has a wrong offset!");
static_assert(offsetof(UBP_ActionUnique_ElecPanda_GatlingAttack_C, FloatCurve) == 0x000250, "Member 'UBP_ActionUnique_ElecPanda_GatlingAttack_C::FloatCurve' has a wrong offset!");
static_assert(offsetof(UBP_ActionUnique_ElecPanda_GatlingAttack_C, ImpactTime) == 0x000258, "Member 'UBP_ActionUnique_ElecPanda_GatlingAttack_C::ImpactTime' has a wrong offset!");
static_assert(offsetof(UBP_ActionUnique_ElecPanda_GatlingAttack_C, Impact) == 0x000260, "Member 'UBP_ActionUnique_ElecPanda_GatlingAttack_C::Impact' has a wrong offset!");
static_assert(offsetof(UBP_ActionUnique_ElecPanda_GatlingAttack_C, ElecShootSpeed) == 0x000264, "Member 'UBP_ActionUnique_ElecPanda_GatlingAttack_C::ElecShootSpeed' has a wrong offset!");
static_assert(offsetof(UBP_ActionUnique_ElecPanda_GatlingAttack_C, StartShootTimer) == 0x000268, "Member 'UBP_ActionUnique_ElecPanda_GatlingAttack_C::StartShootTimer' has a wrong offset!");

}

