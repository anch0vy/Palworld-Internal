#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AssignBoard_PalSlot_Assigned

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_AssignBoard_PalSlot_Assigned.WBP_AssignBoard_PalSlot_Assigned_C.ExecuteUbergraph_WBP_AssignBoard_PalSlot_Assigned
// 0x0004 (0x0004 - 0x0000)
struct WBP_AssignBoard_PalSlot_Assigned_C_ExecuteUbergraph_WBP_AssignBoard_PalSlot_Assigned final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_PalSlot_Assigned_C_ExecuteUbergraph_WBP_AssignBoard_PalSlot_Assigned) == 0x000004, "Wrong alignment on WBP_AssignBoard_PalSlot_Assigned_C_ExecuteUbergraph_WBP_AssignBoard_PalSlot_Assigned");
static_assert(sizeof(WBP_AssignBoard_PalSlot_Assigned_C_ExecuteUbergraph_WBP_AssignBoard_PalSlot_Assigned) == 0x000004, "Wrong size on WBP_AssignBoard_PalSlot_Assigned_C_ExecuteUbergraph_WBP_AssignBoard_PalSlot_Assigned");
static_assert(offsetof(WBP_AssignBoard_PalSlot_Assigned_C_ExecuteUbergraph_WBP_AssignBoard_PalSlot_Assigned, EntryPoint) == 0x000000, "Member 'WBP_AssignBoard_PalSlot_Assigned_C_ExecuteUbergraph_WBP_AssignBoard_PalSlot_Assigned::EntryPoint' has a wrong offset!");

// Function WBP_AssignBoard_PalSlot_Assigned.WBP_AssignBoard_PalSlot_Assigned_C.SetIndividualParameter
// 0x0020 (0x0020 - 0x0000)
struct WBP_AssignBoard_PalSlot_Assigned_C_SetIndividualParameter final
{
public:
	class UPalIndividualCharacterParameter*       Parameter;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374F[0x7];                                     // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APalCharacter*                          CallFunc_GetIndividualActor_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAssignedFixed_ReturnValue;              // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_AssignBoard_PalSlot_Assigned_C_SetIndividualParameter) == 0x000008, "Wrong alignment on WBP_AssignBoard_PalSlot_Assigned_C_SetIndividualParameter");
static_assert(sizeof(WBP_AssignBoard_PalSlot_Assigned_C_SetIndividualParameter) == 0x000020, "Wrong size on WBP_AssignBoard_PalSlot_Assigned_C_SetIndividualParameter");
static_assert(offsetof(WBP_AssignBoard_PalSlot_Assigned_C_SetIndividualParameter, Parameter) == 0x000000, "Member 'WBP_AssignBoard_PalSlot_Assigned_C_SetIndividualParameter::Parameter' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_PalSlot_Assigned_C_SetIndividualParameter, Temp_bool_Variable) == 0x000008, "Member 'WBP_AssignBoard_PalSlot_Assigned_C_SetIndividualParameter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_PalSlot_Assigned_C_SetIndividualParameter, CallFunc_GetIndividualActor_ReturnValue) == 0x000010, "Member 'WBP_AssignBoard_PalSlot_Assigned_C_SetIndividualParameter::CallFunc_GetIndividualActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_PalSlot_Assigned_C_SetIndividualParameter, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_AssignBoard_PalSlot_Assigned_C_SetIndividualParameter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_PalSlot_Assigned_C_SetIndividualParameter, CallFunc_IsValid_ReturnValue_1) == 0x000019, "Member 'WBP_AssignBoard_PalSlot_Assigned_C_SetIndividualParameter::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_PalSlot_Assigned_C_SetIndividualParameter, Temp_byte_Variable) == 0x00001A, "Member 'WBP_AssignBoard_PalSlot_Assigned_C_SetIndividualParameter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_PalSlot_Assigned_C_SetIndividualParameter, CallFunc_IsAssignedFixed_ReturnValue) == 0x00001B, "Member 'WBP_AssignBoard_PalSlot_Assigned_C_SetIndividualParameter::CallFunc_IsAssignedFixed_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_PalSlot_Assigned_C_SetIndividualParameter, Temp_byte_Variable_1) == 0x00001C, "Member 'WBP_AssignBoard_PalSlot_Assigned_C_SetIndividualParameter::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_AssignBoard_PalSlot_Assigned_C_SetIndividualParameter, K2Node_Select_Default) == 0x00001D, "Member 'WBP_AssignBoard_PalSlot_Assigned_C_SetIndividualParameter::K2Node_Select_Default' has a wrong offset!");

}

