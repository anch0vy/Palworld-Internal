#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Arena_PalSelect_Ready

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_Arena_PalSelect_Ready.WBP_Arena_PalSelect_Ready_C.ExecuteUbergraph_WBP_Arena_PalSelect_Ready
// 0x0108 (0x0108 - 0x0000)
struct WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Current;                        // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Max;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CA8[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue_1;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0070(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00C0(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CA9[0x7];                                     // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D8(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_1;         // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5CAA[0x6];                                     // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready) == 0x000008, "Wrong alignment on WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready");
static_assert(sizeof(WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready) == 0x000108, "Wrong size on WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready");
static_assert(offsetof(WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready, EntryPoint) == 0x000000, "Member 'WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready, K2Node_CustomEvent_Current) == 0x000004, "Member 'WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready::K2Node_CustomEvent_Current' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready, K2Node_CustomEvent_Max) == 0x000008, "Member 'WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready::K2Node_CustomEvent_Max' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000010, "Member 'WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready, CallFunc_Conv_IntToInt64_ReturnValue_1) == 0x000018, "Member 'WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready::CallFunc_Conv_IntToInt64_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready, K2Node_MakeStruct_FormatArgumentData_1) == 0x000070, "Member 'WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready, K2Node_MakeArray_Array) == 0x0000C0, "Member 'WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready, CallFunc_IsAnimationPlaying_ReturnValue) == 0x0000D0, "Member 'WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready, CallFunc_Format_ReturnValue) == 0x0000D8, "Member 'WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready, CallFunc_PlayAnimation_ReturnValue) == 0x0000F0, "Member 'WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready, CallFunc_IsAnimationPlaying_ReturnValue_1) == 0x0000F8, "Member 'WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready::CallFunc_IsAnimationPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready, CallFunc_BooleanOR_ReturnValue) == 0x0000F9, "Member 'WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready, CallFunc_PlayAnimation_ReturnValue_1) == 0x000100, "Member 'WBP_Arena_PalSelect_Ready_C_ExecuteUbergraph_WBP_Arena_PalSelect_Ready::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function WBP_Arena_PalSelect_Ready.WBP_Arena_PalSelect_Ready_C.SetPalCount
// 0x0008 (0x0008 - 0x0000)
struct WBP_Arena_PalSelect_Ready_C_SetPalCount final
{
public:
	int32                                         Current;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Max;                                               // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Arena_PalSelect_Ready_C_SetPalCount) == 0x000004, "Wrong alignment on WBP_Arena_PalSelect_Ready_C_SetPalCount");
static_assert(sizeof(WBP_Arena_PalSelect_Ready_C_SetPalCount) == 0x000008, "Wrong size on WBP_Arena_PalSelect_Ready_C_SetPalCount");
static_assert(offsetof(WBP_Arena_PalSelect_Ready_C_SetPalCount, Current) == 0x000000, "Member 'WBP_Arena_PalSelect_Ready_C_SetPalCount::Current' has a wrong offset!");
static_assert(offsetof(WBP_Arena_PalSelect_Ready_C_SetPalCount, Max) == 0x000004, "Member 'WBP_Arena_PalSelect_Ready_C_SetPalCount::Max' has a wrong offset!");

}

