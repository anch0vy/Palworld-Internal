#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UniqueRideWeapon_RapidBase

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_UniqueRideWeapon_RapidBase.BP_UniqueRideWeapon_RapidBase_C.ExecuteUbergraph_BP_UniqueRideWeapon_RapidBase
// 0x0038 (0x0038 - 0x0000)
struct BP_UniqueRideWeapon_RapidBase_C_ExecuteUbergraph_BP_UniqueRideWeapon_RapidBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54A3[0x4];                                     // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetShootInterval_Time;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_InitialStartDelay_ImplicitCast; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueRideWeapon_RapidBase_C_ExecuteUbergraph_BP_UniqueRideWeapon_RapidBase) == 0x000008, "Wrong alignment on BP_UniqueRideWeapon_RapidBase_C_ExecuteUbergraph_BP_UniqueRideWeapon_RapidBase");
static_assert(sizeof(BP_UniqueRideWeapon_RapidBase_C_ExecuteUbergraph_BP_UniqueRideWeapon_RapidBase) == 0x000038, "Wrong size on BP_UniqueRideWeapon_RapidBase_C_ExecuteUbergraph_BP_UniqueRideWeapon_RapidBase");
static_assert(offsetof(BP_UniqueRideWeapon_RapidBase_C_ExecuteUbergraph_BP_UniqueRideWeapon_RapidBase, EntryPoint) == 0x000000, "Member 'BP_UniqueRideWeapon_RapidBase_C_ExecuteUbergraph_BP_UniqueRideWeapon_RapidBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_UniqueRideWeapon_RapidBase_C_ExecuteUbergraph_BP_UniqueRideWeapon_RapidBase, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_UniqueRideWeapon_RapidBase_C_ExecuteUbergraph_BP_UniqueRideWeapon_RapidBase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_UniqueRideWeapon_RapidBase_C_ExecuteUbergraph_BP_UniqueRideWeapon_RapidBase, CallFunc_GetShootInterval_Time) == 0x000018, "Member 'BP_UniqueRideWeapon_RapidBase_C_ExecuteUbergraph_BP_UniqueRideWeapon_RapidBase::CallFunc_GetShootInterval_Time' has a wrong offset!");
static_assert(offsetof(BP_UniqueRideWeapon_RapidBase_C_ExecuteUbergraph_BP_UniqueRideWeapon_RapidBase, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'BP_UniqueRideWeapon_RapidBase_C_ExecuteUbergraph_BP_UniqueRideWeapon_RapidBase::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueRideWeapon_RapidBase_C_ExecuteUbergraph_BP_UniqueRideWeapon_RapidBase, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000028, "Member 'BP_UniqueRideWeapon_RapidBase_C_ExecuteUbergraph_BP_UniqueRideWeapon_RapidBase::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueRideWeapon_RapidBase_C_ExecuteUbergraph_BP_UniqueRideWeapon_RapidBase, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000030, "Member 'BP_UniqueRideWeapon_RapidBase_C_ExecuteUbergraph_BP_UniqueRideWeapon_RapidBase::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_UniqueRideWeapon_RapidBase_C_ExecuteUbergraph_BP_UniqueRideWeapon_RapidBase, CallFunc_K2_SetTimerDelegate_InitialStartDelay_ImplicitCast) == 0x000034, "Member 'BP_UniqueRideWeapon_RapidBase_C_ExecuteUbergraph_BP_UniqueRideWeapon_RapidBase::CallFunc_K2_SetTimerDelegate_InitialStartDelay_ImplicitCast' has a wrong offset!");

// Function BP_UniqueRideWeapon_RapidBase.BP_UniqueRideWeapon_RapidBase_C.GetShootInterval
// 0x0008 (0x0008 - 0x0000)
struct BP_UniqueRideWeapon_RapidBase_C_GetShootInterval final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueRideWeapon_RapidBase_C_GetShootInterval) == 0x000008, "Wrong alignment on BP_UniqueRideWeapon_RapidBase_C_GetShootInterval");
static_assert(sizeof(BP_UniqueRideWeapon_RapidBase_C_GetShootInterval) == 0x000008, "Wrong size on BP_UniqueRideWeapon_RapidBase_C_GetShootInterval");
static_assert(offsetof(BP_UniqueRideWeapon_RapidBase_C_GetShootInterval, Time) == 0x000000, "Member 'BP_UniqueRideWeapon_RapidBase_C_GetShootInterval::Time' has a wrong offset!");

// Function BP_UniqueRideWeapon_RapidBase.BP_UniqueRideWeapon_RapidBase_C.ShootBulletBP
// 0x0003 (0x0003 - 0x0000)
struct BP_UniqueRideWeapon_RapidBase_C_ShootBulletBP final
{
public:
	bool                                          CallFunc_IsWeaponHijacked_ReturnValue;             // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanUse_ReturnValue;                       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UniqueRideWeapon_RapidBase_C_ShootBulletBP) == 0x000001, "Wrong alignment on BP_UniqueRideWeapon_RapidBase_C_ShootBulletBP");
static_assert(sizeof(BP_UniqueRideWeapon_RapidBase_C_ShootBulletBP) == 0x000003, "Wrong size on BP_UniqueRideWeapon_RapidBase_C_ShootBulletBP");
static_assert(offsetof(BP_UniqueRideWeapon_RapidBase_C_ShootBulletBP, CallFunc_IsWeaponHijacked_ReturnValue) == 0x000000, "Member 'BP_UniqueRideWeapon_RapidBase_C_ShootBulletBP::CallFunc_IsWeaponHijacked_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueRideWeapon_RapidBase_C_ShootBulletBP, CallFunc_CanUse_ReturnValue) == 0x000001, "Member 'BP_UniqueRideWeapon_RapidBase_C_ShootBulletBP::CallFunc_CanUse_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UniqueRideWeapon_RapidBase_C_ShootBulletBP, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'BP_UniqueRideWeapon_RapidBase_C_ShootBulletBP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

}

